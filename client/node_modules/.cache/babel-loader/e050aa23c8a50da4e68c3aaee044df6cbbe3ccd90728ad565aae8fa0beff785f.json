{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dispatchRequest = dispatchRequest;\nexports.buildUrl = buildUrl;\nconst runtime_1 = require(\"./runtime\");\nconst utils_1 = require(\"./utils\");\nconst isCloudflareWorkers = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent) === \"Cloudflare-Workers\";\nfunction dispatchRequest(params) {\n  return __awaiter(this, void 0, void 0, function* () {\n    var _a, _b, _c;\n    const {\n      targetUrl,\n      input,\n      config,\n      options = {}\n    } = params;\n    const {\n      credentials: credentialsValue,\n      requestMiddleware,\n      responseHandler,\n      fetch\n    } = config;\n    const userAgent = (0, runtime_1.isBrowser)() ? {} : {\n      \"User-Agent\": (0, runtime_1.getUserAgent)()\n    };\n    const credentials = typeof credentialsValue === \"function\" ? credentialsValue() : credentialsValue;\n    const {\n      method,\n      url,\n      headers\n    } = yield requestMiddleware({\n      method: ((_b = (_a = params.method) !== null && _a !== void 0 ? _a : options.method) !== null && _b !== void 0 ? _b : \"post\").toUpperCase(),\n      url: targetUrl,\n      headers: params.headers\n    });\n    const authHeader = credentials ? {\n      Authorization: `Key ${credentials}`\n    } : {};\n    const requestHeaders = Object.assign(Object.assign(Object.assign(Object.assign({}, authHeader), {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }), userAgent), headers !== null && headers !== void 0 ? headers : {});\n    const {\n        responseHandler: customResponseHandler\n      } = options,\n      requestInit = __rest(options, [\"responseHandler\"]);\n    const response = yield fetch(url, Object.assign(Object.assign(Object.assign(Object.assign({}, requestInit), {\n      method,\n      headers: Object.assign(Object.assign({}, requestHeaders), (_c = requestInit.headers) !== null && _c !== void 0 ? _c : {})\n    }), !isCloudflareWorkers && {\n      mode: \"cors\"\n    }), {\n      signal: options.signal,\n      body: method.toLowerCase() !== \"get\" && input ? JSON.stringify(input) : undefined\n    }));\n    const handleResponse = customResponseHandler !== null && customResponseHandler !== void 0 ? customResponseHandler : responseHandler;\n    return yield handleResponse(response);\n  });\n}\n/**\n * Builds the final url to run the function based on its `id` or alias and\n * a the options from `RunOptions<Input>`.\n *\n * @private\n * @param id the function id or alias\n * @param options the run options\n * @returns the final url to run the function\n */\nfunction buildUrl(id, options = {}) {\n  var _a, _b;\n  const method = ((_a = options.method) !== null && _a !== void 0 ? _a : \"post\").toLowerCase();\n  const path = ((_b = options.path) !== null && _b !== void 0 ? _b : \"\").replace(/^\\//, \"\").replace(/\\/{2,}/, \"/\");\n  const input = options.input;\n  const params = Object.assign(Object.assign({}, options.query || {}), method === \"get\" ? input : {});\n  const queryParams = Object.keys(params).length > 0 ? `?${new URLSearchParams(params).toString()}` : \"\";\n  // if a fal url is passed, just use it\n  if ((0, utils_1.isValidUrl)(id)) {\n    const url = id.endsWith(\"/\") ? id : `${id}/`;\n    return `${url}${path}${queryParams}`;\n  }\n  const appId = (0, utils_1.ensureEndpointIdFormat)(id);\n  const subdomain = options.subdomain ? `${options.subdomain}.` : \"\";\n  const url = `https://${subdomain}fal.run/${appId}/${path}`;\n  return `${url.replace(/\\/$/, \"\")}${queryParams}`;\n}","map":{"version":3,"names":["exports","dispatchRequest","buildUrl","runtime_1","require","utils_1","isCloudflareWorkers","navigator","userAgent","params","targetUrl","input","config","options","credentials","credentialsValue","requestMiddleware","responseHandler","fetch","isBrowser","getUserAgent","method","url","headers","_b","_a","toUpperCase","authHeader","Authorization","requestHeaders","Object","assign","Accept","customResponseHandler","requestInit","__rest","response","_c","mode","signal","body","toLowerCase","JSON","stringify","undefined","handleResponse","id","path","replace","query","queryParams","keys","length","URLSearchParams","toString","isValidUrl","endsWith","appId","ensureEndpointIdFormat","subdomain"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/libs/client/src/request.ts"],"sourcesContent":["import { RequiredConfig } from \"./config\";\nimport { ResponseHandler } from \"./response\";\nimport { getUserAgent, isBrowser } from \"./runtime\";\nimport { RunOptions, UrlOptions } from \"./types/common\";\nimport { ensureEndpointIdFormat, isValidUrl } from \"./utils\";\n\nconst isCloudflareWorkers =\n  typeof navigator !== \"undefined\" &&\n  navigator?.userAgent === \"Cloudflare-Workers\";\n\ntype RequestOptions = {\n  responseHandler?: ResponseHandler<any>;\n};\n\ntype RequestParams<Input = any> = {\n  method?: string;\n  targetUrl: string;\n  input?: Input;\n  config: RequiredConfig;\n  options?: RequestOptions & RequestInit;\n  headers?: Record<string, string>;\n};\n\nexport async function dispatchRequest<Input, Output>(\n  params: RequestParams<Input>,\n): Promise<Output> {\n  const { targetUrl, input, config, options = {} } = params;\n  const {\n    credentials: credentialsValue,\n    requestMiddleware,\n    responseHandler,\n    fetch,\n  } = config;\n  const userAgent = isBrowser() ? {} : { \"User-Agent\": getUserAgent() };\n  const credentials =\n    typeof credentialsValue === \"function\"\n      ? credentialsValue()\n      : credentialsValue;\n\n  const { method, url, headers } = await requestMiddleware({\n    method: (params.method ?? options.method ?? \"post\").toUpperCase(),\n    url: targetUrl,\n    headers: params.headers,\n  });\n  const authHeader = credentials ? { Authorization: `Key ${credentials}` } : {};\n  const requestHeaders = {\n    ...authHeader,\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    ...userAgent,\n    ...(headers ?? {}),\n  } as HeadersInit;\n\n  const { responseHandler: customResponseHandler, ...requestInit } = options;\n  const response = await fetch(url, {\n    ...requestInit,\n    method,\n    headers: {\n      ...requestHeaders,\n      ...(requestInit.headers ?? {}),\n    },\n    ...(!isCloudflareWorkers && { mode: \"cors\" }),\n    signal: options.signal,\n    body:\n      method.toLowerCase() !== \"get\" && input\n        ? JSON.stringify(input)\n        : undefined,\n  });\n  const handleResponse = customResponseHandler ?? responseHandler;\n  return await handleResponse(response);\n}\n\n/**\n * Builds the final url to run the function based on its `id` or alias and\n * a the options from `RunOptions<Input>`.\n *\n * @private\n * @param id the function id or alias\n * @param options the run options\n * @returns the final url to run the function\n */\nexport function buildUrl<Input>(\n  id: string,\n  options: RunOptions<Input> & UrlOptions = {},\n): string {\n  const method = (options.method ?? \"post\").toLowerCase();\n  const path = (options.path ?? \"\").replace(/^\\//, \"\").replace(/\\/{2,}/, \"/\");\n  const input = options.input;\n  const params = {\n    ...(options.query || {}),\n    ...(method === \"get\" ? input : {}),\n  };\n\n  const queryParams =\n    Object.keys(params).length > 0\n      ? `?${new URLSearchParams(params).toString()}`\n      : \"\";\n\n  // if a fal url is passed, just use it\n  if (isValidUrl(id)) {\n    const url = id.endsWith(\"/\") ? id : `${id}/`;\n    return `${url}${path}${queryParams}`;\n  }\n\n  const appId = ensureEndpointIdFormat(id);\n  const subdomain = options.subdomain ? `${options.subdomain}.` : \"\";\n  const url = `https://${subdomain}fal.run/${appId}/${path}`;\n  return `${url.replace(/\\/$/, \"\")}${queryParams}`;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}