{"ast":null,"code":"var YOUR_CLIENT_ID = 'REPLACE_THIS_VALUE';\nvar YOUR_REDIRECT_URI = 'REPLACE_THIS_VALUE';\n\n// Parse query string to see if page request is coming from OAuth 2.0 server.\nvar fragmentString = location.hash.substring(1);\nvar params = {};\nvar regex = /([^&=]+)=([^&]*)/g,\n  m;\nwhile (m = regex.exec(fragmentString)) {\n  params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n}\nif (Object.keys(params).length > 0 && params['state']) {\n  if (params['state'] == localStorage.getItem('state')) {\n    localStorage.setItem('oauth2-test-params', JSON.stringify(params));\n    trySampleRequest();\n  } else {\n    console.log('State mismatch. Possible CSRF attack');\n  }\n}\n\n// Function to generate a random state value\nfunction generateCryptoRandomState() {\n  const randomValues = new Uint32Array(2);\n  window.crypto.getRandomValues(randomValues);\n\n  // Encode as UTF-8\n  const utf8Encoder = new TextEncoder();\n  const utf8Array = utf8Encoder.encode(String.fromCharCode.apply(null, randomValues));\n\n  // Base64 encode the UTF-8 data\n  return btoa(String.fromCharCode.apply(null, utf8Array)).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// If there's an access token, try an API request.\n// Otherwise, start OAuth 2.0 flow.\nfunction trySampleRequest() {\n  var params = JSON.parse(localStorage.getItem('oauth2-test-params'));\n  if (params && params['access_token']) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://www.googleapis.com/youtube/v3/channels?part=snippet&mine=true&' + 'access_token=' + params['access_token']);\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        console.log(xhr.response);\n      } else if (xhr.readyState === 4 && xhr.status === 401) {\n        // Token invalid, so prompt for user permission.\n        oauth2SignIn();\n      }\n    };\n    xhr.send(null);\n  } else {\n    oauth2SignIn();\n  }\n}\n\n/*\n * Create form to request access token from Google's OAuth 2.0 server.\n */\nfunction oauth2SignIn() {\n  // create random state value and store in local storage\n  var state = generateCryptoRandomState();\n  localStorage.setItem('state', state);\n\n  // Google's OAuth 2.0 endpoint for requesting an access token\n  var oauth2Endpoint = 'https://accounts.google.com/o/oauth2/v2/auth';\n\n  // Create element to open OAuth 2.0 endpoint in new window.\n  var form = document.createElement('form');\n  form.setAttribute('method', 'GET'); // Send as a GET request.\n  form.setAttribute('action', oauth2Endpoint);\n\n  // Parameters to pass to OAuth 2.0 endpoint.\n  var params = {\n    'client_id': YOUR_CLIENT_ID,\n    'redirect_uri': YOUR_REDIRECT_URI,\n    'scope': 'https://www.googleapis.com/auth/youtube.force-ssl',\n    'state': state,\n    'include_granted_scopes': 'true',\n    'response_type': 'token'\n  };\n\n  // Add form parameters as hidden input values.\n  for (var p in params) {\n    var input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', p);\n    input.setAttribute('value', params[p]);\n    form.appendChild(input);\n  }\n\n  // Add form to page and submit it to open the OAuth 2.0 endpoint.\n  document.body.appendChild(form);\n  form.submit();\n}","map":{"version":3,"names":["YOUR_CLIENT_ID","YOUR_REDIRECT_URI","fragmentString","location","hash","substring","params","regex","m","exec","decodeURIComponent","Object","keys","length","localStorage","getItem","setItem","JSON","stringify","trySampleRequest","console","log","generateCryptoRandomState","randomValues","Uint32Array","window","crypto","getRandomValues","utf8Encoder","TextEncoder","utf8Array","encode","String","fromCharCode","apply","btoa","replace","parse","xhr","XMLHttpRequest","open","onreadystatechange","e","readyState","status","response","oauth2SignIn","send","state","oauth2Endpoint","form","document","createElement","setAttribute","p","input","appendChild","body","submit"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js"],"sourcesContent":["var YOUR_CLIENT_ID = 'REPLACE_THIS_VALUE';\nvar YOUR_REDIRECT_URI = 'REPLACE_THIS_VALUE';\n\n// Parse query string to see if page request is coming from OAuth 2.0 server.\nvar fragmentString = location.hash.substring(1);\nvar params = {};\nvar regex = /([^&=]+)=([^&]*)/g, m;\nwhile (m = regex.exec(fragmentString)) {\n  params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n}\nif (Object.keys(params).length > 0 && params['state']) {\n  if (params['state'] == localStorage.getItem('state')) {\n    localStorage.setItem('oauth2-test-params', JSON.stringify(params) );\n\n    trySampleRequest();\n  } else {\n    console.log('State mismatch. Possible CSRF attack');\n  }\n}\n\n// Function to generate a random state value\nfunction generateCryptoRandomState() {\n  const randomValues = new Uint32Array(2);\n  window.crypto.getRandomValues(randomValues);\n\n  // Encode as UTF-8\n  const utf8Encoder = new TextEncoder();\n  const utf8Array = utf8Encoder.encode(\n    String.fromCharCode.apply(null, randomValues)\n  );\n\n  // Base64 encode the UTF-8 data\n  return btoa(String.fromCharCode.apply(null, utf8Array))\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\n// If there's an access token, try an API request.\n// Otherwise, start OAuth 2.0 flow.\nfunction trySampleRequest() {\n  var params = JSON.parse(localStorage.getItem('oauth2-test-params'));\n  if (params && params['access_token']) { \n    var xhr = new XMLHttpRequest();\n    xhr.open('GET',\n        'https://www.googleapis.com/youtube/v3/channels?part=snippet&mine=true&' +\n        'access_token=' + params['access_token']);\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        console.log(xhr.response);\n      } else if (xhr.readyState === 4 && xhr.status === 401) {\n        // Token invalid, so prompt for user permission.\n        oauth2SignIn();\n      }\n    };\n    xhr.send(null); \n  } else {\n    oauth2SignIn();\n  }\n}\n\n/*\n * Create form to request access token from Google's OAuth 2.0 server.\n */\nfunction oauth2SignIn() {\n  // create random state value and store in local storage\n  var state = generateCryptoRandomState();\n  localStorage.setItem('state', state);\n\n  // Google's OAuth 2.0 endpoint for requesting an access token\n  var oauth2Endpoint = 'https://accounts.google.com/o/oauth2/v2/auth';\n\n  // Create element to open OAuth 2.0 endpoint in new window.\n  var form = document.createElement('form');\n  form.setAttribute('method', 'GET'); // Send as a GET request.\n  form.setAttribute('action', oauth2Endpoint);\n\n  // Parameters to pass to OAuth 2.0 endpoint.\n  var params = {'client_id': YOUR_CLIENT_ID,\n                'redirect_uri': YOUR_REDIRECT_URI,\n                'scope': 'https://www.googleapis.com/auth/youtube.force-ssl',\n                'state': state,\n                'include_granted_scopes': 'true',\n                'response_type': 'token'};\n\n  // Add form parameters as hidden input values.\n  for (var p in params) {\n    var input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', p);\n    input.setAttribute('value', params[p]);\n    form.appendChild(input);\n  }\n\n  // Add form to page and submit it to open the OAuth 2.0 endpoint.\n  document.body.appendChild(form);\n  form.submit();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}