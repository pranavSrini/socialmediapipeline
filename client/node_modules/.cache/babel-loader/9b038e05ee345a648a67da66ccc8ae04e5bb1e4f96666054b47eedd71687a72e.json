{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nvar json_schema_traverse_1 = __importDefault(require(\"json-schema-traverse\"));\n/**\n * Run through a JSON Schema object and compose up an object containing default data for any schema\n * property that is required and also has a defined default.\n *\n * Code partially adapted from the `json-schema-default` package but modified to only return\n * defaults of required properties.\n *\n * @todo This is a good candidate to be moved into a core `oas` library method.\n * @see {@link https://github.com/mdornseif/json-schema-default}\n */\nfunction getJSONSchemaDefaults(jsonSchemas) {\n  return jsonSchemas.map(function (_a) {\n    var _b;\n    var payloadType = _a.type,\n      jsonSchema = _a.schema;\n    var defaults = {};\n    (0, json_schema_traverse_1[\"default\"])(jsonSchema, function (schema, pointer, rootSchema, parentPointer, parentKeyword, parentSchema, indexProperty) {\n      if (!pointer.startsWith('/properties/')) {\n        return;\n      }\n      if (Array.isArray(parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.required) && parentSchema.required.includes(indexProperty)) {\n        if (schema.type === 'object' && indexProperty) {\n          defaults[indexProperty] = {};\n        }\n        var destination_1 = defaults;\n        if (parentPointer) {\n          // To map nested objects correct we need to pick apart the parent pointer.\n          parentPointer.replace(/\\/properties/g, '').split('/').forEach(function (subSchema) {\n            if (subSchema === '') {\n              return;\n            }\n            destination_1 = (destination_1 === null || destination_1 === void 0 ? void 0 : destination_1[subSchema]) || {};\n          });\n        }\n        if (schema[\"default\"] !== undefined) {\n          if (indexProperty !== undefined) {\n            destination_1[indexProperty] = schema[\"default\"];\n          }\n        }\n      }\n    });\n    if (!Object.keys(defaults).length) {\n      return {};\n    }\n    return _b = {},\n    // @todo should we filter out empty and undefined objects from here with `remove-undefined-objects`?\n    _b[payloadType] = defaults, _b;\n  }).reduce(function (prev, next) {\n    return Object.assign(prev, next);\n  });\n}\nexports[\"default\"] = getJSONSchemaDefaults;","map":{"version":3,"names":["__importDefault","mod","__esModule","exports","json_schema_traverse_1","require","getJSONSchemaDefaults","jsonSchemas","map","_a","_b","payloadType","type","jsonSchema","schema","defaults","pointer","rootSchema","parentPointer","parentKeyword","parentSchema","indexProperty","startsWith","Array","isArray","required","includes","destination_1","replace","split","forEach","subSchema","undefined","Object","keys","length","reduce","prev","next","assign"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/server/.api/apis/aivideoapi/node_modules/api/dist/core/getJSONSchemaDefaults.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar json_schema_traverse_1 = __importDefault(require(\"json-schema-traverse\"));\n/**\n * Run through a JSON Schema object and compose up an object containing default data for any schema\n * property that is required and also has a defined default.\n *\n * Code partially adapted from the `json-schema-default` package but modified to only return\n * defaults of required properties.\n *\n * @todo This is a good candidate to be moved into a core `oas` library method.\n * @see {@link https://github.com/mdornseif/json-schema-default}\n */\nfunction getJSONSchemaDefaults(jsonSchemas) {\n    return jsonSchemas\n        .map(function (_a) {\n        var _b;\n        var payloadType = _a.type, jsonSchema = _a.schema;\n        var defaults = {};\n        (0, json_schema_traverse_1[\"default\"])(jsonSchema, function (schema, pointer, rootSchema, parentPointer, parentKeyword, parentSchema, indexProperty) {\n            if (!pointer.startsWith('/properties/')) {\n                return;\n            }\n            if (Array.isArray(parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.required) && parentSchema.required.includes(indexProperty)) {\n                if (schema.type === 'object' && indexProperty) {\n                    defaults[indexProperty] = {};\n                }\n                var destination_1 = defaults;\n                if (parentPointer) {\n                    // To map nested objects correct we need to pick apart the parent pointer.\n                    parentPointer\n                        .replace(/\\/properties/g, '')\n                        .split('/')\n                        .forEach(function (subSchema) {\n                        if (subSchema === '') {\n                            return;\n                        }\n                        destination_1 = (destination_1 === null || destination_1 === void 0 ? void 0 : destination_1[subSchema]) || {};\n                    });\n                }\n                if (schema[\"default\"] !== undefined) {\n                    if (indexProperty !== undefined) {\n                        destination_1[indexProperty] = schema[\"default\"];\n                    }\n                }\n            }\n        });\n        if (!Object.keys(defaults).length) {\n            return {};\n        }\n        return _b = {},\n            // @todo should we filter out empty and undefined objects from here with `remove-undefined-objects`?\n            _b[payloadType] = defaults,\n            _b;\n    })\n        .reduce(function (prev, next) { return Object.assign(prev, next); });\n}\nexports[\"default\"] = getJSONSchemaDefaults;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,OAAO,CAACD,UAAU,GAAG,IAAI;AACzB,IAAIE,sBAAsB,GAAGJ,eAAe,CAACK,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACC,WAAW,EAAE;EACxC,OAAOA,WAAW,CACbC,GAAG,CAAC,UAAUC,EAAE,EAAE;IACnB,IAAIC,EAAE;IACN,IAAIC,WAAW,GAAGF,EAAE,CAACG,IAAI;MAAEC,UAAU,GAAGJ,EAAE,CAACK,MAAM;IACjD,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB,CAAC,CAAC,EAAEX,sBAAsB,CAAC,SAAS,CAAC,EAAES,UAAU,EAAE,UAAUC,MAAM,EAAEE,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,aAAa,EAAEC,YAAY,EAAEC,aAAa,EAAE;MACjJ,IAAI,CAACL,OAAO,CAACM,UAAU,CAAC,cAAc,CAAC,EAAE;QACrC;MACJ;MACA,IAAIC,KAAK,CAACC,OAAO,CAACJ,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACK,QAAQ,CAAC,IAAIL,YAAY,CAACK,QAAQ,CAACC,QAAQ,CAACL,aAAa,CAAC,EAAE;QACnJ,IAAIP,MAAM,CAACF,IAAI,KAAK,QAAQ,IAAIS,aAAa,EAAE;UAC3CN,QAAQ,CAACM,aAAa,CAAC,GAAG,CAAC,CAAC;QAChC;QACA,IAAIM,aAAa,GAAGZ,QAAQ;QAC5B,IAAIG,aAAa,EAAE;UACf;UACAA,aAAa,CACRU,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAC5BC,KAAK,CAAC,GAAG,CAAC,CACVC,OAAO,CAAC,UAAUC,SAAS,EAAE;YAC9B,IAAIA,SAAS,KAAK,EAAE,EAAE;cAClB;YACJ;YACAJ,aAAa,GAAG,CAACA,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACI,SAAS,CAAC,KAAK,CAAC,CAAC;UAClH,CAAC,CAAC;QACN;QACA,IAAIjB,MAAM,CAAC,SAAS,CAAC,KAAKkB,SAAS,EAAE;UACjC,IAAIX,aAAa,KAAKW,SAAS,EAAE;YAC7BL,aAAa,CAACN,aAAa,CAAC,GAAGP,MAAM,CAAC,SAAS,CAAC;UACpD;QACJ;MACJ;IACJ,CAAC,CAAC;IACF,IAAI,CAACmB,MAAM,CAACC,IAAI,CAACnB,QAAQ,CAAC,CAACoB,MAAM,EAAE;MAC/B,OAAO,CAAC,CAAC;IACb;IACA,OAAOzB,EAAE,GAAG,CAAC,CAAC;IACV;IACAA,EAAE,CAACC,WAAW,CAAC,GAAGI,QAAQ,EAC1BL,EAAE;EACV,CAAC,CAAC,CACG0B,MAAM,CAAC,UAAUC,IAAI,EAAEC,IAAI,EAAE;IAAE,OAAOL,MAAM,CAACM,MAAM,CAACF,IAAI,EAAEC,IAAI,CAAC;EAAE,CAAC,CAAC;AAC5E;AACAnC,OAAO,CAAC,SAAS,CAAC,GAAGG,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}