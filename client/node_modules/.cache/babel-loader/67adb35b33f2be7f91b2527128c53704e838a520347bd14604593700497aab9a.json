{"ast":null,"code":"import { extendError } from \"./extend-error\";\nimport { normalizeArgs, normalizeOptions } from \"./normalize\";\nimport { toJSON as errorToJSON } from \"./to-json\";\nconst constructor = Ono;\nexport { constructor as Ono };\n/**\n * Creates an `Ono` instance for a specifc error type.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Ono(ErrorConstructor, options) {\n  options = normalizeOptions(options);\n  function ono(...args) {\n    let {\n      originalError,\n      props,\n      message\n    } = normalizeArgs(args, options);\n    // Create a new error of the specified type\n    let newError = new ErrorConstructor(message);\n    // Extend the error with the properties of the original error and the `props` object\n    return extendError(newError, originalError, props);\n  }\n  ono[Symbol.species] = ErrorConstructor;\n  return ono;\n}\n/**\n * Returns an object containing all properties of the given Error object,\n * which can be used with `JSON.stringify()`.\n */\nOno.toJSON = function toJSON(error) {\n  return errorToJSON.call(error);\n};\n/**\n * Extends the given Error object with enhanced Ono functionality, such as nested stack traces,\n * additional properties, and improved support for `JSON.stringify()`.\n */\nOno.extend = function extend(error, originalError, props) {\n  if (props || originalError instanceof Error) {\n    return extendError(error, originalError, props);\n  } else if (originalError) {\n    return extendError(error, undefined, originalError);\n  } else {\n    return extendError(error);\n  }\n};","map":{"version":3,"names":["extendError","normalizeArgs","normalizeOptions","toJSON","errorToJSON","constructor","Ono","ErrorConstructor","options","ono","args","originalError","props","message","newError","Symbol","species","error","call","extend","Error","undefined"],"sources":["../src/constructor.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,aAAa;AAC7D,SAASC,MAAM,IAAIC,WAAW,QAAQ,WAAW;AAGjD,MAAMC,WAAW,GAAGC,GAAqB;AACzC,SAASD,WAAW,IAAIC,GAAG;AAE3B;;;AAGA;AACA,SAASA,GAAGA,CAAsBC,gBAAyC,EAAEC,OAAoB;EAC/FA,OAAO,GAAGN,gBAAgB,CAACM,OAAO,CAAC;EAEnC,SAASC,GAAGA,CAAwC,GAAGC,IAAe;IACpE,IAAI;MAAEC,aAAa;MAAEC,KAAK;MAAEC;IAAO,CAAE,GAAGZ,aAAa,CAAOS,IAAI,EAAEF,OAAQ,CAAC;IAE3E;IACA,IAAIM,QAAQ,GAAG,IAAKP,gBAAiD,CAACM,OAAO,CAAC;IAE9E;IACA,OAAOb,WAAW,CAACc,QAAQ,EAAEH,aAAa,EAAEC,KAAK,CAAC;EACpD;EAEAH,GAAG,CAACM,MAAM,CAACC,OAAO,CAAC,GAAGT,gBAAgB;EACtC,OAAOE,GAAG;AACZ;AAEA;;;;AAIAH,GAAG,CAACH,MAAM,GAAG,SAASA,MAAMA,CAACc,KAAgB;EAC3C,OAAOb,WAAW,CAACc,IAAI,CAACD,KAAK,CAAC;AAChC,CAAC;AAED;;;;AAIAX,GAAG,CAACa,MAAM,GAAG,SAASA,MAAMA,CAACF,KAAgB,EAAEN,aAAyB,EAAEC,KAAc;EACtF,IAAIA,KAAK,IAAID,aAAa,YAAYS,KAAK,EAAE;IAC3C,OAAOpB,WAAW,CAACiB,KAAK,EAAEN,aAAa,EAAEC,KAAK,CAAC;GAChD,MACI,IAAID,aAAa,EAAE;IACtB,OAAOX,WAAW,CAACiB,KAAK,EAAEI,SAAS,EAAEV,aAAa,CAAC;GACpD,MACI;IACH,OAAOX,WAAW,CAACiB,KAAK,CAAC;;AAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}