{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.getByScheme = void 0;\n/**\n * @param user User to retrieve retrieve an auth key for.\n * @param scheme The type of security scheme that we want a key for.\n */\nfunction getKey(user, scheme) {\n  switch (scheme.type) {\n    case 'oauth2':\n    case 'apiKey':\n      return user[scheme._key] || user.apiKey || scheme['x-default'] || null;\n    case 'http':\n      if (scheme.scheme === 'basic') {\n        return user[scheme._key] || {\n          user: user.user || null,\n          pass: user.pass || null\n        };\n      }\n      if (scheme.scheme === 'bearer') {\n        return user[scheme._key] || user.apiKey || null;\n      }\n      return null;\n    default:\n      return null;\n  }\n}\n/**\n * Retrieve auth keys for a specific security scheme for a given user for a specific \"app\" that\n * they have configured.\n *\n * For `scheme` we're typing it to a union of `SecurityScheme` and `any` because we have handling\n * and tests for an unknown or unrecognized `type` and though it's not possible with the\n * `SecurityScheme.type` to be unrecognized it may still be possible to get an unrecognized scheme\n * with this method in the wild as we have API definitions in our database that were ingested\n * before we had good validation in place.\n *\n * @param user User\n * @param scheme Security scheme to get auth keys for.\n * @param selectedApp The user app to retrieve an auth key for.\n */\nfunction getByScheme(user, scheme, selectedApp) {\n  if (scheme === void 0) {\n    scheme = {};\n  }\n  if ((user === null || user === void 0 ? void 0 : user.keys) && user.keys.length) {\n    if (selectedApp) {\n      return getKey(user.keys.find(function (key) {\n        return key.name === selectedApp;\n      }), scheme);\n    }\n    return getKey(user.keys[0], scheme);\n  }\n  return getKey(user, scheme);\n}\nexports.getByScheme = getByScheme;\n/**\n * Retrieve auth keys for an API definition from a given user for a specific \"app\" that they have\n * configured.\n *\n * @param api API definition\n * @param user User\n * @param selectedApp The user app to retrieve an auth key for.\n */\nfunction getAuth(api, user, selectedApp) {\n  var _a;\n  return Object.keys(((_a = api === null || api === void 0 ? void 0 : api.components) === null || _a === void 0 ? void 0 : _a.securitySchemes) || {}).map(function (scheme) {\n    var _a;\n    return _a = {}, _a[scheme] = getByScheme(user, __assign(__assign({}, api.components.securitySchemes[scheme]), {\n      _key: scheme\n    }), selectedApp), _a;\n  }).reduce(function (prev, next) {\n    return Object.assign(prev, next);\n  }, {});\n}\nexports[\"default\"] = getAuth;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","exports","__esModule","getByScheme","getKey","user","scheme","type","_key","apiKey","pass","selectedApp","keys","find","key","name","getAuth","api","_a","components","securitySchemes","map","reduce","prev","next"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/server/.api/apis/aivideoapi/node_modules/oas/dist/lib/get-auth.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nexports.getByScheme = void 0;\n/**\n * @param user User to retrieve retrieve an auth key for.\n * @param scheme The type of security scheme that we want a key for.\n */\nfunction getKey(user, scheme) {\n    switch (scheme.type) {\n        case 'oauth2':\n        case 'apiKey':\n            return user[scheme._key] || user.apiKey || scheme['x-default'] || null;\n        case 'http':\n            if (scheme.scheme === 'basic') {\n                return user[scheme._key] || { user: user.user || null, pass: user.pass || null };\n            }\n            if (scheme.scheme === 'bearer') {\n                return user[scheme._key] || user.apiKey || null;\n            }\n            return null;\n        default:\n            return null;\n    }\n}\n/**\n * Retrieve auth keys for a specific security scheme for a given user for a specific \"app\" that\n * they have configured.\n *\n * For `scheme` we're typing it to a union of `SecurityScheme` and `any` because we have handling\n * and tests for an unknown or unrecognized `type` and though it's not possible with the\n * `SecurityScheme.type` to be unrecognized it may still be possible to get an unrecognized scheme\n * with this method in the wild as we have API definitions in our database that were ingested\n * before we had good validation in place.\n *\n * @param user User\n * @param scheme Security scheme to get auth keys for.\n * @param selectedApp The user app to retrieve an auth key for.\n */\nfunction getByScheme(user, scheme, selectedApp) {\n    if (scheme === void 0) { scheme = {}; }\n    if ((user === null || user === void 0 ? void 0 : user.keys) && user.keys.length) {\n        if (selectedApp) {\n            return getKey(user.keys.find(function (key) { return key.name === selectedApp; }), scheme);\n        }\n        return getKey(user.keys[0], scheme);\n    }\n    return getKey(user, scheme);\n}\nexports.getByScheme = getByScheme;\n/**\n * Retrieve auth keys for an API definition from a given user for a specific \"app\" that they have\n * configured.\n *\n * @param api API definition\n * @param user User\n * @param selectedApp The user app to retrieve an auth key for.\n */\nfunction getAuth(api, user, selectedApp) {\n    var _a;\n    return Object.keys(((_a = api === null || api === void 0 ? void 0 : api.components) === null || _a === void 0 ? void 0 : _a.securitySchemes) || {})\n        .map(function (scheme) {\n        var _a;\n        return _a = {},\n            _a[scheme] = getByScheme(user, __assign(__assign({}, api.components.securitySchemes[scheme]), { _key: scheme }), selectedApp),\n            _a;\n    })\n        .reduce(function (prev, next) { return Object.assign(prev, next); }, {});\n}\nexports[\"default\"] = getAuth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}