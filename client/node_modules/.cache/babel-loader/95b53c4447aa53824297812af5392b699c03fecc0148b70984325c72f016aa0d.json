{"ast":null,"code":"var _jsxFileName = \"/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [step, setStep] = useState(\"start\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const [youtubeUrl, setYoutubeUrl] = useState(\"\");\n  const [instagramUrl, setInstagramUrl] = useState(\"\");\n  const generateVideo = async () => {\n    const response = await axios.post(\"http://localhost:5050/generate-video\", {\n      prompt\n    });\n    setVideoUrl(response.data.videoUrl);\n  };\n  const uploadToYouTube = async () => {\n    const response = await axios.post(\"http://localhost:5050/upload-youtube\", {\n      videoUrl\n    });\n    setYoutubeUrl(response.data.youtubeUrl);\n  };\n  const uploadToInstagram = async () => {\n    const response = await axios.post(\"http://localhost:5050/upload-instagram\", {\n      videoUrl\n    });\n    setInstagramUrl(response.data.instagramUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      // Add the prompt/title/etc. to the redirect\n      const params = new URLSearchParams({\n        videoUrl: savedVideoUrl,\n        title: \"My AI Video\",\n        description: \"Generated with AI\",\n        redirect: \"http://localhost:3000/uploaded\"\n      });\n      window.location.href = `http://localhost:5050/api/login?${params.toString()}`;\n    },\n    children: \"Upload to YouTube\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"QacbPUHEXU+nv5fFQwW3aBhaJ4c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","step","setStep","prompt","setPrompt","videoUrl","setVideoUrl","youtubeUrl","setYoutubeUrl","instagramUrl","setInstagramUrl","generateVideo","response","post","data","uploadToYouTube","uploadToInstagram","onClick","params","URLSearchParams","savedVideoUrl","title","description","redirect","window","location","href","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [step, setStep] = useState(\"start\");\n    const [prompt, setPrompt] = useState(\"\");\n    const [videoUrl, setVideoUrl] = useState(\"\");\n    const [youtubeUrl, setYoutubeUrl] = useState(\"\");\n    const [instagramUrl, setInstagramUrl] = useState(\"\");\n\n    const generateVideo = async () => {\n        const response = await axios.post(\"http://localhost:5050/generate-video\", { prompt });\n        setVideoUrl(response.data.videoUrl);\n    };\n\n    const uploadToYouTube = async () => {\n        const response = await axios.post(\"http://localhost:5050/upload-youtube\", { videoUrl });\n        setYoutubeUrl(response.data.youtubeUrl);\n    };\n\n    const uploadToInstagram = async () => {\n        const response = await axios.post(\"http://localhost:5050/upload-instagram\", { videoUrl });\n        setInstagramUrl(response.data.instagramUrl);\n    };\n\n    return (\n        <button onClick={() => {\n            // Add the prompt/title/etc. to the redirect\n            const params = new URLSearchParams({\n              videoUrl: savedVideoUrl,\n              title: \"My AI Video\",\n              description: \"Generated with AI\",\n              redirect: \"http://localhost:3000/uploaded\"\n            });\n          \n            window.location.href = `http://localhost:5050/api/login?${params.toString()}`;\n          }}>\n            Upload to YouTube\n          </button>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,sCAAsC,EAAE;MAAEV;IAAO,CAAC,CAAC;IACrFG,WAAW,CAACM,QAAQ,CAACE,IAAI,CAACT,QAAQ,CAAC;EACvC,CAAC;EAED,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMH,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,sCAAsC,EAAE;MAAER;IAAS,CAAC,CAAC;IACvFG,aAAa,CAACI,QAAQ,CAACE,IAAI,CAACP,UAAU,CAAC;EAC3C,CAAC;EAED,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMJ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,wCAAwC,EAAE;MAAER;IAAS,CAAC,CAAC;IACzFK,eAAe,CAACE,QAAQ,CAACE,IAAI,CAACL,YAAY,CAAC;EAC/C,CAAC;EAED,oBACIX,OAAA;IAAQmB,OAAO,EAAEA,CAAA,KAAM;MACnB;MACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjCd,QAAQ,EAAEe,aAAa;QACvBC,KAAK,EAAE,aAAa;QACpBC,WAAW,EAAE,mBAAmB;QAChCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEFC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmCR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE;IAC/E,CAAE;IAAAC,QAAA,EAAC;EAEH;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEnB;AAAChC,EAAA,CArCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}