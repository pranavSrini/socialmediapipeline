{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nvar get_mediatype_examples_1 = __importDefault(require(\"../lib/get-mediatype-examples\"));\nvar rmoas_types_1 = require(\"../rmoas.types\");\n/**\n * Retrieve a collection of response examples keyed, by their media type.\n *\n * @param operation Operation to retrieve response examples for.\n */\nfunction getResponseExamples(operation) {\n  return Object.keys(operation.responses || {}).map(function (status) {\n    var response = operation.responses[status];\n    var onlyHeaders = false;\n    // If we have a $ref here that means that this was a circular ref so we should ignore it.\n    if ((0, rmoas_types_1.isRef)(response)) {\n      return false;\n    }\n    var mediaTypes = {};\n    (response.content ? Object.keys(response.content) : []).forEach(function (mediaType) {\n      if (!mediaType) return;\n      var mediaTypeObject = response.content[mediaType];\n      var examples = (0, get_mediatype_examples_1[\"default\"])(mediaType, mediaTypeObject, {\n        includeReadOnly: true,\n        includeWriteOnly: false\n      });\n      if (examples) {\n        mediaTypes[mediaType] = examples;\n      }\n    });\n    // If the response has no content, but has headers, hardcode an empty example so the headers\n    // modal will still display\n    if (response.headers && Object.keys(response.headers).length && !Object.keys(mediaTypes).length) {\n      mediaTypes['*/*'] = [];\n      onlyHeaders = true;\n    }\n    if (!Object.keys(mediaTypes).length) {\n      return false;\n    }\n    return __assign({\n      status: status,\n      mediaTypes: mediaTypes\n    }, onlyHeaders ? {\n      onlyHeaders: onlyHeaders\n    } : {});\n  }).filter(Boolean);\n}\nexports[\"default\"] = getResponseExamples;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importDefault","mod","__esModule","exports","get_mediatype_examples_1","require","rmoas_types_1","getResponseExamples","operation","keys","responses","map","status","response","onlyHeaders","isRef","mediaTypes","content","forEach","mediaType","mediaTypeObject","examples","includeReadOnly","includeWriteOnly","headers","filter","Boolean"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/server/.api/apis/aivideoapi/node_modules/oas/dist/operation/get-response-examples.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar get_mediatype_examples_1 = __importDefault(require(\"../lib/get-mediatype-examples\"));\nvar rmoas_types_1 = require(\"../rmoas.types\");\n/**\n * Retrieve a collection of response examples keyed, by their media type.\n *\n * @param operation Operation to retrieve response examples for.\n */\nfunction getResponseExamples(operation) {\n    return Object.keys(operation.responses || {})\n        .map(function (status) {\n        var response = operation.responses[status];\n        var onlyHeaders = false;\n        // If we have a $ref here that means that this was a circular ref so we should ignore it.\n        if ((0, rmoas_types_1.isRef)(response)) {\n            return false;\n        }\n        var mediaTypes = {};\n        (response.content ? Object.keys(response.content) : []).forEach(function (mediaType) {\n            if (!mediaType)\n                return;\n            var mediaTypeObject = response.content[mediaType];\n            var examples = (0, get_mediatype_examples_1[\"default\"])(mediaType, mediaTypeObject, {\n                includeReadOnly: true,\n                includeWriteOnly: false\n            });\n            if (examples) {\n                mediaTypes[mediaType] = examples;\n            }\n        });\n        // If the response has no content, but has headers, hardcode an empty example so the headers\n        // modal will still display\n        if (response.headers && Object.keys(response.headers).length && !Object.keys(mediaTypes).length) {\n            mediaTypes['*/*'] = [];\n            onlyHeaders = true;\n        }\n        if (!Object.keys(mediaTypes).length) {\n            return false;\n        }\n        return __assign({ status: status, mediaTypes: mediaTypes }, (onlyHeaders ? { onlyHeaders: onlyHeaders } : {}));\n    })\n        .filter(Boolean);\n}\nexports[\"default\"] = getResponseExamples;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}