{"ast":null,"code":"import { Ono as OnoConstructor } from \"./constructor\";\nconst singleton = ono;\nexport { singleton as ono };\nono.error = new OnoConstructor(Error);\nono.eval = new OnoConstructor(EvalError);\nono.range = new OnoConstructor(RangeError);\nono.reference = new OnoConstructor(ReferenceError);\nono.syntax = new OnoConstructor(SyntaxError);\nono.type = new OnoConstructor(TypeError);\nono.uri = new OnoConstructor(URIError);\nconst onoMap = ono;\n/**\n * Creates a new error with the specified message, properties, and/or inner error.\n * If an inner error is provided, then the new error will match its type, if possible.\n */\nfunction ono(...args) {\n  let originalError = args[0];\n  // Is the first argument an Error-like object?\n  if (typeof originalError === \"object\" && typeof originalError.name === \"string\") {\n    // Try to find an Ono singleton method that matches this error type\n    for (let typedOno of Object.values(onoMap)) {\n      if (typeof typedOno === \"function\" && typedOno.name === \"ono\") {\n        let species = typedOno[Symbol.species];\n        if (species && species !== Error && (originalError instanceof species || originalError.name === species.name)) {\n          // Create an error of the same type\n          return typedOno.apply(undefined, args);\n        }\n      }\n    }\n  }\n  // By default, create a base Error object\n  return ono.error.apply(undefined, args);\n}","map":{"version":3,"names":["Ono","OnoConstructor","singleton","ono","error","Error","eval","EvalError","range","RangeError","reference","ReferenceError","syntax","SyntaxError","type","TypeError","uri","URIError","onoMap","args","originalError","name","typedOno","Object","values","species","Symbol","apply","undefined"],"sources":["../src/singleton.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,GAAG,IAAIC,cAAc,QAAQ,eAAe;AAGrD,MAAMC,SAAS,GAAGC,GAAmB;AACrC,SAASD,SAAS,IAAIC,GAAG;AAEzBA,GAAG,CAACC,KAAK,GAAG,IAAIH,cAAc,CAACI,KAAK,CAAC;AACrCF,GAAG,CAACG,IAAI,GAAG,IAAIL,cAAc,CAACM,SAAS,CAAC;AACxCJ,GAAG,CAACK,KAAK,GAAG,IAAIP,cAAc,CAACQ,UAAU,CAAC;AAC1CN,GAAG,CAACO,SAAS,GAAG,IAAIT,cAAc,CAACU,cAAc,CAAC;AAClDR,GAAG,CAACS,MAAM,GAAG,IAAIX,cAAc,CAACY,WAAW,CAAC;AAC5CV,GAAG,CAACW,IAAI,GAAG,IAAIb,cAAc,CAACc,SAAS,CAAC;AACxCZ,GAAG,CAACa,GAAG,GAAG,IAAIf,cAAc,CAACgB,QAAQ,CAAC;AAEtC,MAAMC,MAAM,GAAGf,GAA4C;AAE3D;;;;AAIA,SAASA,GAAGA,CAAwC,GAAGgB,IAAe;EACpE,IAAIC,aAAa,GAAGD,IAAI,CAAC,CAAC,CAA0B;EAEpD;EACA,IAAI,OAAOC,aAAa,KAAK,QAAQ,IAAI,OAAOA,aAAa,CAACC,IAAI,KAAK,QAAQ,EAAE;IAE/E;IACA,KAAK,IAAIC,QAAQ,IAAIC,MAAM,CAACC,MAAM,CAACN,MAAM,CAAC,EAAE;MAC1C,IAAI,OAAOI,QAAQ,KAAK,UAAU,IAAIA,QAAQ,CAACD,IAAI,KAAK,KAAK,EAAE;QAC7D,IAAII,OAAO,GAAGH,QAAQ,CAACI,MAAM,CAACD,OAAO,CAAC;QAEtC,IAAIA,OAAO,IAAIA,OAAO,KAAKpB,KAAK,KAAKe,aAAa,YAAYK,OAAO,IAAIL,aAAa,CAACC,IAAI,KAAKI,OAAO,CAACJ,IAAI,CAAC,EAAE;UAC7G;UACA,OAAOC,QAAQ,CAACK,KAAK,CAACC,SAAS,EAAET,IAAI,CAAC;;;;;EAM9C;EACA,OAAOhB,GAAG,CAACC,KAAK,CAACuB,KAAK,CAACC,SAAS,EAAET,IAAI,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}