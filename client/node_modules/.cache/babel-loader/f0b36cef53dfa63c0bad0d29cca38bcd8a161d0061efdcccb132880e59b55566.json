{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureEndpointIdFormat = ensureEndpointIdFormat;\nexports.parseEndpointId = parseEndpointId;\nexports.isValidUrl = isValidUrl;\nexports.throttle = throttle;\nexports.isReact = isReact;\nexports.isPlainObject = isPlainObject;\nfunction ensureEndpointIdFormat(id) {\n  const parts = id.split(\"/\");\n  if (parts.length > 1) {\n    return id;\n  }\n  const [, appOwner, appId] = /^([0-9]+)-([a-zA-Z0-9-]+)$/.exec(id) || [];\n  if (appOwner && appId) {\n    return `${appOwner}/${appId}`;\n  }\n  throw new Error(`Invalid app id: ${id}. Must be in the format <appOwner>/<appId>`);\n}\nconst ENDPOINT_NAMESPACES = [\"workflows\", \"comfy\"];\nfunction parseEndpointId(id) {\n  const normalizedId = ensureEndpointIdFormat(id);\n  const parts = normalizedId.split(\"/\");\n  if (ENDPOINT_NAMESPACES.includes(parts[0])) {\n    return {\n      owner: parts[1],\n      alias: parts[2],\n      path: parts.slice(3).join(\"/\") || undefined,\n      namespace: parts[0]\n    };\n  }\n  return {\n    owner: parts[0],\n    alias: parts[1],\n    path: parts.slice(2).join(\"/\") || undefined\n  };\n}\nfunction isValidUrl(url) {\n  try {\n    const {\n      host\n    } = new URL(url);\n    return /(fal\\.(ai|run))$/.test(host);\n  } catch (_) {\n    return false;\n  }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(func, limit, leading = false) {\n  let lastFunc;\n  let lastRan;\n  return (...args) => {\n    if (!lastRan && leading) {\n      func(...args);\n      lastRan = Date.now();\n    } else {\n      if (lastFunc) {\n        clearTimeout(lastFunc);\n      }\n      lastFunc = setTimeout(() => {\n        if (Date.now() - lastRan >= limit) {\n          func(...args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n}\nlet isRunningInReact;\n/**\n * Not really the most optimal way to detect if we're running in React,\n * but the idea here is that we can support multiple rendering engines\n * (starting with React), with all their peculiarities, without having\n * to add a dependency or creating custom integrations (e.g. custom hooks).\n *\n * Yes, a bit of magic to make things works out-of-the-box.\n * @returns `true` if running in React, `false` otherwise.\n */\nfunction isReact() {\n  if (isRunningInReact === undefined) {\n    const stack = new Error().stack;\n    isRunningInReact = !!stack && (stack.includes(\"node_modules/react-dom/\") || stack.includes(\"node_modules/next/\"));\n  }\n  return isRunningInReact;\n}\n/**\n * Check if a value is a plain object.\n * @param value - The value to check.\n * @returns `true` if the value is a plain object, `false` otherwise.\n */\nfunction isPlainObject(value) {\n  return !!value && Object.getPrototypeOf(value) === Object.prototype;\n}","map":{"version":3,"names":["exports","ensureEndpointIdFormat","parseEndpointId","isValidUrl","throttle","isReact","isPlainObject","id","parts","split","length","appOwner","appId","exec","Error","ENDPOINT_NAMESPACES","normalizedId","includes","owner","alias","path","slice","join","undefined","namespace","url","host","URL","test","_","func","limit","leading","lastFunc","lastRan","args","Date","now","clearTimeout","setTimeout","isRunningInReact","stack","value","Object","getPrototypeOf","prototype"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/libs/client/src/utils.ts"],"sourcesContent":["export function ensureEndpointIdFormat(id: string): string {\n  const parts = id.split(\"/\");\n  if (parts.length > 1) {\n    return id;\n  }\n  const [, appOwner, appId] = /^([0-9]+)-([a-zA-Z0-9-]+)$/.exec(id) || [];\n  if (appOwner && appId) {\n    return `${appOwner}/${appId}`;\n  }\n  throw new Error(\n    `Invalid app id: ${id}. Must be in the format <appOwner>/<appId>`,\n  );\n}\n\nconst ENDPOINT_NAMESPACES = [\"workflows\", \"comfy\"] as const;\n\ntype EndpointNamespace = (typeof ENDPOINT_NAMESPACES)[number];\n\nexport type EndpointId = {\n  readonly owner: string;\n  readonly alias: string;\n  readonly path?: string;\n  readonly namespace?: EndpointNamespace;\n};\n\nexport function parseEndpointId(id: string): EndpointId {\n  const normalizedId = ensureEndpointIdFormat(id);\n  const parts = normalizedId.split(\"/\");\n  if (ENDPOINT_NAMESPACES.includes(parts[0] as any)) {\n    return {\n      owner: parts[1],\n      alias: parts[2],\n      path: parts.slice(3).join(\"/\") || undefined,\n      namespace: parts[0] as EndpointNamespace,\n    };\n  }\n  return {\n    owner: parts[0],\n    alias: parts[1],\n    path: parts.slice(2).join(\"/\") || undefined,\n  };\n}\n\nexport function isValidUrl(url: string) {\n  try {\n    const { host } = new URL(url);\n    return /(fal\\.(ai|run))$/.test(host);\n  } catch (_) {\n    return false;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number,\n  leading = false,\n): (...funcArgs: Parameters<T>) => ReturnType<T> | void {\n  let lastFunc: NodeJS.Timeout | null;\n  let lastRan: number;\n\n  return (...args: Parameters<T>): ReturnType<T> | void => {\n    if (!lastRan && leading) {\n      func(...args);\n      lastRan = Date.now();\n    } else {\n      if (lastFunc) {\n        clearTimeout(lastFunc);\n      }\n\n      lastFunc = setTimeout(\n        () => {\n          if (Date.now() - lastRan >= limit) {\n            func(...args);\n            lastRan = Date.now();\n          }\n        },\n        limit - (Date.now() - lastRan),\n      );\n    }\n  };\n}\n\nlet isRunningInReact: boolean | undefined;\n\n/**\n * Not really the most optimal way to detect if we're running in React,\n * but the idea here is that we can support multiple rendering engines\n * (starting with React), with all their peculiarities, without having\n * to add a dependency or creating custom integrations (e.g. custom hooks).\n *\n * Yes, a bit of magic to make things works out-of-the-box.\n * @returns `true` if running in React, `false` otherwise.\n */\nexport function isReact() {\n  if (isRunningInReact === undefined) {\n    const stack = new Error().stack;\n    isRunningInReact =\n      !!stack &&\n      (stack.includes(\"node_modules/react-dom/\") ||\n        stack.includes(\"node_modules/next/\"));\n  }\n  return isRunningInReact;\n}\n\n/**\n * Check if a value is a plain object.\n * @param value - The value to check.\n * @returns `true` if the value is a plain object, `false` otherwise.\n */\nexport function isPlainObject(value: any): boolean {\n  return !!value && Object.getPrototypeOf(value) === Object.prototype;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}