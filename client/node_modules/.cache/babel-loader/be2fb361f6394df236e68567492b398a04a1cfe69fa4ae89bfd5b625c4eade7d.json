{"ast":null,"code":"\"use strict\";\n\nvar _a;\nexports.__esModule = true;\nexports.validateExtension = exports.getExtension = exports.defaults = exports.SIMPLE_MODE = exports.SEND_DEFAULTS = exports.SAMPLES_LANGUAGES = exports.SAMPLES_ENABLED = exports.PROXY_ENABLED = exports.METRICS_ENABLED = exports.HEADERS = exports.EXPLORER_ENABLED = exports.CODE_SAMPLES = void 0;\nexports.CODE_SAMPLES = 'code-samples';\nexports.EXPLORER_ENABLED = 'explorer-enabled';\nexports.HEADERS = 'headers';\nexports.METRICS_ENABLED = 'metrics-enabled';\nexports.PROXY_ENABLED = 'proxy-enabled';\nexports.SAMPLES_ENABLED = 'samples-enabled';\nexports.SAMPLES_LANGUAGES = 'samples-languages';\nexports.SEND_DEFAULTS = 'send-defaults';\nexports.SIMPLE_MODE = 'simple-mode';\nexports.defaults = (_a = {}, _a[exports.CODE_SAMPLES] = undefined, _a[exports.EXPLORER_ENABLED] = true, _a[exports.HEADERS] = undefined, _a[exports.METRICS_ENABLED] = true, _a[exports.PROXY_ENABLED] = true, _a[exports.SAMPLES_ENABLED] = true, _a[exports.SAMPLES_LANGUAGES] = ['shell', 'node', 'ruby', 'php', 'python', 'java', 'csharp'], _a[exports.SEND_DEFAULTS] = false, _a[exports.SIMPLE_MODE] = true, _a);\n/**\n * With one of our custom OpenAPI extensions, look for it in either an instance of `oas` or an\n * instance of the `Operation` class in `oas`.\n *\n * Our custom extensions can either be nestled inside of an `x-readme` object or at the root level\n * with an `x-` prefix.\n *\n * @see {@link https://npm.im/oas}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n * @param extension Specification extension to lookup.\n * @param oas An instance of the `oas` library class.\n * @param operation An instsance of the `Operation` class from the `oas` library.\n * @returns Contents of the extension if found, otherwise the extensions default value.\n */\nfunction getExtension(extension, oas, operation) {\n  if (operation) {\n    if (operation.hasExtension('x-readme')) {\n      var data = operation.getExtension('x-readme');\n      if (data && typeof data === 'object' && extension in data) {\n        return data[extension];\n      }\n    }\n    if (operation.hasExtension(\"x-\".concat(extension))) {\n      return operation.getExtension(\"x-\".concat(extension));\n    }\n  }\n  // Because our `code-samples` extension is intended for operation-level use, if it's instead\n  // placed at the OAS-level we should ignore it.\n  if (extension === exports.CODE_SAMPLES) {\n    return exports.defaults[extension];\n  }\n  if (oas.hasExtension('x-readme')) {\n    var data = oas.getExtension('x-readme');\n    if (data && typeof data === 'object' && extension in data) {\n      return data[extension];\n    }\n  }\n  if (oas.hasExtension(\"x-\".concat(extension))) {\n    return oas.getExtension(\"x-\".concat(extension));\n  }\n  return exports.defaults[extension];\n}\nexports.getExtension = getExtension;\n/**\n * With one of our custom OpenAPI extensions, determine if it's valid on a given instance of `oas`.\n *\n * @todo add support for validating on operations.\n *\n * @see {@link https://npm.im/oas}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n * @param extension Specification extension to lookup.\n * @param oas An instance of the `oas` library class.\n */\nfunction validateExtension(extension, oas) {\n  if (oas.hasExtension('x-readme')) {\n    var data = oas.getExtension('x-readme');\n    if (typeof data !== 'object' || Array.isArray(data) || data === null) {\n      throw new TypeError('\"x-readme\" must be of type \"Object\"');\n    }\n    if (extension in data) {\n      if ([exports.CODE_SAMPLES, exports.HEADERS, exports.SAMPLES_LANGUAGES].includes(extension)) {\n        if (!Array.isArray(data[extension])) {\n          throw new TypeError(\"\\\"x-readme.\".concat(extension, \"\\\" must be of type \\\"Array\\\"\"));\n        }\n      } else if (typeof data[extension] !== 'boolean') {\n        throw new TypeError(\"\\\"x-readme.\".concat(extension, \"\\\" must be of type \\\"Boolean\\\"\"));\n      }\n    }\n  }\n  // If the extension isn't grouped under `x-readme`, we need to look for them with `x-` prefixes.\n  if (oas.hasExtension(\"x-\".concat(extension))) {\n    var data = oas.getExtension(\"x-\".concat(extension));\n    if ([exports.CODE_SAMPLES, exports.HEADERS, exports.SAMPLES_LANGUAGES].includes(extension)) {\n      if (!Array.isArray(data)) {\n        throw new TypeError(\"\\\"x-\".concat(extension, \"\\\" must be of type \\\"Array\\\"\"));\n      }\n    } else if (typeof data !== 'boolean') {\n      throw new TypeError(\"\\\"x-\".concat(extension, \"\\\" must be of type \\\"Boolean\\\"\"));\n    }\n  }\n}\nexports.validateExtension = validateExtension;","map":{"version":3,"names":["_a","exports","__esModule","validateExtension","getExtension","defaults","SIMPLE_MODE","SEND_DEFAULTS","SAMPLES_LANGUAGES","SAMPLES_ENABLED","PROXY_ENABLED","METRICS_ENABLED","HEADERS","EXPLORER_ENABLED","CODE_SAMPLES","undefined","extension","oas","operation","hasExtension","data","concat","Array","isArray","TypeError","includes"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/server/.api/apis/aivideoapi/node_modules/@readme/oas-extensions/dist/index.js"],"sourcesContent":["\"use strict\";\nvar _a;\nexports.__esModule = true;\nexports.validateExtension = exports.getExtension = exports.defaults = exports.SIMPLE_MODE = exports.SEND_DEFAULTS = exports.SAMPLES_LANGUAGES = exports.SAMPLES_ENABLED = exports.PROXY_ENABLED = exports.METRICS_ENABLED = exports.HEADERS = exports.EXPLORER_ENABLED = exports.CODE_SAMPLES = void 0;\nexports.CODE_SAMPLES = 'code-samples';\nexports.EXPLORER_ENABLED = 'explorer-enabled';\nexports.HEADERS = 'headers';\nexports.METRICS_ENABLED = 'metrics-enabled';\nexports.PROXY_ENABLED = 'proxy-enabled';\nexports.SAMPLES_ENABLED = 'samples-enabled';\nexports.SAMPLES_LANGUAGES = 'samples-languages';\nexports.SEND_DEFAULTS = 'send-defaults';\nexports.SIMPLE_MODE = 'simple-mode';\nexports.defaults = (_a = {},\n    _a[exports.CODE_SAMPLES] = undefined,\n    _a[exports.EXPLORER_ENABLED] = true,\n    _a[exports.HEADERS] = undefined,\n    _a[exports.METRICS_ENABLED] = true,\n    _a[exports.PROXY_ENABLED] = true,\n    _a[exports.SAMPLES_ENABLED] = true,\n    _a[exports.SAMPLES_LANGUAGES] = ['shell', 'node', 'ruby', 'php', 'python', 'java', 'csharp'],\n    _a[exports.SEND_DEFAULTS] = false,\n    _a[exports.SIMPLE_MODE] = true,\n    _a);\n/**\n * With one of our custom OpenAPI extensions, look for it in either an instance of `oas` or an\n * instance of the `Operation` class in `oas`.\n *\n * Our custom extensions can either be nestled inside of an `x-readme` object or at the root level\n * with an `x-` prefix.\n *\n * @see {@link https://npm.im/oas}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n * @param extension Specification extension to lookup.\n * @param oas An instance of the `oas` library class.\n * @param operation An instsance of the `Operation` class from the `oas` library.\n * @returns Contents of the extension if found, otherwise the extensions default value.\n */\nfunction getExtension(extension, oas, operation) {\n    if (operation) {\n        if (operation.hasExtension('x-readme')) {\n            var data = operation.getExtension('x-readme');\n            if (data && typeof data === 'object' && extension in data) {\n                return data[extension];\n            }\n        }\n        if (operation.hasExtension(\"x-\".concat(extension))) {\n            return operation.getExtension(\"x-\".concat(extension));\n        }\n    }\n    // Because our `code-samples` extension is intended for operation-level use, if it's instead\n    // placed at the OAS-level we should ignore it.\n    if (extension === exports.CODE_SAMPLES) {\n        return exports.defaults[extension];\n    }\n    if (oas.hasExtension('x-readme')) {\n        var data = oas.getExtension('x-readme');\n        if (data && typeof data === 'object' && extension in data) {\n            return data[extension];\n        }\n    }\n    if (oas.hasExtension(\"x-\".concat(extension))) {\n        return oas.getExtension(\"x-\".concat(extension));\n    }\n    return exports.defaults[extension];\n}\nexports.getExtension = getExtension;\n/**\n * With one of our custom OpenAPI extensions, determine if it's valid on a given instance of `oas`.\n *\n * @todo add support for validating on operations.\n *\n * @see {@link https://npm.im/oas}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n * @param extension Specification extension to lookup.\n * @param oas An instance of the `oas` library class.\n */\nfunction validateExtension(extension, oas) {\n    if (oas.hasExtension('x-readme')) {\n        var data = oas.getExtension('x-readme');\n        if (typeof data !== 'object' || Array.isArray(data) || data === null) {\n            throw new TypeError('\"x-readme\" must be of type \"Object\"');\n        }\n        if (extension in data) {\n            if ([exports.CODE_SAMPLES, exports.HEADERS, exports.SAMPLES_LANGUAGES].includes(extension)) {\n                if (!Array.isArray(data[extension])) {\n                    throw new TypeError(\"\\\"x-readme.\".concat(extension, \"\\\" must be of type \\\"Array\\\"\"));\n                }\n            }\n            else if (typeof data[extension] !== 'boolean') {\n                throw new TypeError(\"\\\"x-readme.\".concat(extension, \"\\\" must be of type \\\"Boolean\\\"\"));\n            }\n        }\n    }\n    // If the extension isn't grouped under `x-readme`, we need to look for them with `x-` prefixes.\n    if (oas.hasExtension(\"x-\".concat(extension))) {\n        var data = oas.getExtension(\"x-\".concat(extension));\n        if ([exports.CODE_SAMPLES, exports.HEADERS, exports.SAMPLES_LANGUAGES].includes(extension)) {\n            if (!Array.isArray(data)) {\n                throw new TypeError(\"\\\"x-\".concat(extension, \"\\\" must be of type \\\"Array\\\"\"));\n            }\n        }\n        else if (typeof data !== 'boolean') {\n            throw new TypeError(\"\\\"x-\".concat(extension, \"\\\" must be of type \\\"Boolean\\\"\"));\n        }\n    }\n}\nexports.validateExtension = validateExtension;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}