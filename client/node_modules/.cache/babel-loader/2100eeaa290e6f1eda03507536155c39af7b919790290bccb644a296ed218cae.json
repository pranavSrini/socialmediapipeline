{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nexports.Webhook = exports.Callback = void 0;\nvar dedupe_common_parameters_1 = __importDefault(require(\"./lib/dedupe-common-parameters\"));\nvar find_schema_definition_1 = __importDefault(require(\"./lib/find-schema-definition\"));\nvar matches_mimetype_1 = __importDefault(require(\"./lib/matches-mimetype\"));\nvar get_callback_examples_1 = __importDefault(require(\"./operation/get-callback-examples\"));\nvar get_parameters_as_json_schema_1 = __importDefault(require(\"./operation/get-parameters-as-json-schema\"));\nvar get_requestbody_examples_1 = __importDefault(require(\"./operation/get-requestbody-examples\"));\nvar get_response_as_json_schema_1 = __importDefault(require(\"./operation/get-response-as-json-schema\"));\nvar get_response_examples_1 = __importDefault(require(\"./operation/get-response-examples\"));\nvar RMOAS = __importStar(require(\"./rmoas.types\"));\nvar utils_1 = require(\"./utils\");\nvar Operation = /** @class */function () {\n  function Operation(api, path, method, operation) {\n    this.schema = operation;\n    this.api = api;\n    this.path = path;\n    this.method = method;\n    this.contentType = undefined;\n    this.requestBodyExamples = undefined;\n    this.responseExamples = undefined;\n    this.callbackExamples = undefined;\n  }\n  Operation.prototype.getSummary = function () {\n    var _a;\n    if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.summary) {\n      return this.schema.summary.trim();\n    } else if (this.api.paths[this.path].summary) {\n      return this.api.paths[this.path].summary;\n    }\n    return undefined;\n  };\n  Operation.prototype.getDescription = function () {\n    var _a;\n    if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.description) {\n      return this.schema.description.trim();\n    } else if (this.api.paths[this.path].description) {\n      return this.api.paths[this.path].description;\n    }\n    return undefined;\n  };\n  Operation.prototype.getContentType = function () {\n    var _this = this;\n    if (this.contentType) {\n      return this.contentType;\n    }\n    var types = [];\n    if (this.schema.requestBody) {\n      if ('$ref' in this.schema.requestBody) {\n        this.schema.requestBody = (0, find_schema_definition_1[\"default\"])(this.schema.requestBody.$ref, this.api);\n      }\n      if ('content' in this.schema.requestBody) {\n        types = Object.keys(this.schema.requestBody.content);\n      }\n    }\n    this.contentType = 'application/json';\n    if (types && types.length) {\n      this.contentType = types[0];\n    }\n    // Favor JSON if it exists\n    types.forEach(function (t) {\n      if (matches_mimetype_1[\"default\"].json(t)) {\n        _this.contentType = t;\n      }\n    });\n    return this.contentType;\n  };\n  Operation.prototype.isFormUrlEncoded = function () {\n    return matches_mimetype_1[\"default\"].formUrlEncoded(this.getContentType());\n  };\n  Operation.prototype.isMultipart = function () {\n    return matches_mimetype_1[\"default\"].multipart(this.getContentType());\n  };\n  Operation.prototype.isJson = function () {\n    return matches_mimetype_1[\"default\"].json(this.getContentType());\n  };\n  Operation.prototype.isXml = function () {\n    return matches_mimetype_1[\"default\"].xml(this.getContentType());\n  };\n  /**\n   * Returns an array of all security requirements associated wtih this operation. If none are\n   * defined at the operation level, the securities for the entire API definition are returned\n   * (with an empty array as a final fallback).\n   *\n   */\n  Operation.prototype.getSecurity = function () {\n    var _a, _b;\n    if (!((_b = (_a = this.api) === null || _a === void 0 ? void 0 : _a.components) === null || _b === void 0 ? void 0 : _b.securitySchemes) || !Object.keys(this.api.components.securitySchemes).length) {\n      return [];\n    }\n    return this.schema.security || this.api.security || [];\n  };\n  /**\n   * Retrieve a collection of grouped security schemes. The inner array determines AND-grouped\n   * security schemes, the outer array determines OR-groups.\n   *\n   * @see {@link https://swagger.io/docs/specification/authentication/#multiple}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#security-requirement-object}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#securityRequirementObject}\n   * @param filterInvalid Optional flag that, when set to `true`, filters out invalid/nonexistent\n   *    security schemes, rather than returning `false`.\n   */\n  Operation.prototype.getSecurityWithTypes = function (filterInvalid) {\n    var _this = this;\n    if (filterInvalid === void 0) {\n      filterInvalid = false;\n    }\n    var securityRequirements = this.getSecurity();\n    return securityRequirements.map(function (requirement) {\n      var keys;\n      try {\n        keys = Object.keys(requirement);\n      } catch (e) {\n        return false;\n      }\n      var keysWithTypes = keys.map(function (key) {\n        var security;\n        try {\n          // Remove the reference type, because we know this will be dereferenced\n          security = _this.api.components.securitySchemes[key];\n        } catch (e) {\n          return false;\n        }\n        if (!security) return false;\n        var type = null;\n        if (security.type === 'http') {\n          if (security.scheme === 'basic') type = 'Basic';else if (security.scheme === 'bearer') type = 'Bearer';else type = security.type;\n        } else if (security.type === 'oauth2') {\n          type = 'OAuth2';\n        } else if (security.type === 'apiKey') {\n          if (security[\"in\"] === 'query') type = 'Query';else if (security[\"in\"] === 'header') type = 'Header';else if (security[\"in\"] === 'cookie') type = 'Cookie';else type = security.type;\n        } else {\n          return false;\n        }\n        return {\n          type: type,\n          security: __assign(__assign({}, security), {\n            _key: key\n          })\n        };\n      });\n      if (filterInvalid) return keysWithTypes.filter(function (key) {\n        return key !== false;\n      });\n      return keysWithTypes;\n    });\n  };\n  /**\n   * Retrieve an object where the keys are unique scheme types, and the values are arrays\n   * containing each security scheme of that type.\n   *\n   */\n  Operation.prototype.prepareSecurity = function () {\n    var securitiesWithTypes = this.getSecurityWithTypes();\n    return securitiesWithTypes.reduce(function (prev, securities) {\n      if (!securities) return prev;\n      securities.forEach(function (security) {\n        // Remove non-existent schemes\n        if (!security) return;\n        if (!prev[security.type]) prev[security.type] = [];\n        // Only add schemes we haven't seen yet.\n        var exists = prev[security.type].findIndex(function (sec) {\n          return sec._key === security.security._key;\n        });\n        if (exists < 0) {\n          prev[security.type].push(security.security);\n        }\n      });\n      return prev;\n    }, {});\n  };\n  Operation.prototype.getHeaders = function () {\n    var _this = this;\n    this.headers = {\n      request: [],\n      response: []\n    };\n    var security = this.prepareSecurity();\n    if (security.Header) {\n      this.headers.request = security.Header.map(function (h) {\n        return h.name;\n      });\n    }\n    if (security.Bearer || security.Basic || security.OAuth2) {\n      this.headers.request.push('Authorization');\n    }\n    if (security.Cookie) {\n      this.headers.request.push('Cookie');\n    }\n    if (this.schema.parameters) {\n      this.headers.request = this.headers.request.concat(\n      // Remove the reference object because we will have already dereferenced\n      this.schema.parameters.map(function (p) {\n        if (p[\"in\"] && p[\"in\"] === 'header') return p.name;\n        return undefined;\n      }).filter(function (p) {\n        return p;\n      }));\n    }\n    if (this.schema.responses) {\n      this.headers.response = Object.keys(this.schema.responses)\n      // Remove the reference object because we will have already dereferenced\n      .filter(function (r) {\n        return _this.schema.responses[r].headers;\n      }).map(function (r) {\n        // Remove the reference object because we will have already dereferenced\n        return Object.keys(_this.schema.responses[r].headers);\n      }).reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n    }\n    // If the operation doesn't already specify a 'content-type' request header,\n    // we check if the path operation request body contains content, which implies that\n    // we should also include the 'content-type' header.\n    if (!this.headers.request.includes('Content-Type') && this.schema.requestBody) {\n      if (this.schema.requestBody.content && Object.keys(this.schema.requestBody.content)) {\n        this.headers.request.push('Content-Type');\n      }\n    }\n    // This is a similar approach, but in this case if we check the response content\n    // and prioritize the 'accept' request header and 'content-type' request header\n    if (this.schema.responses) {\n      if (Object.keys(this.schema.responses).some(function (response) {\n        return !!_this.schema.responses[response].content;\n      })) {\n        if (!this.headers.request.includes('Accept')) this.headers.request.push('Accept');\n        if (!this.headers.response.includes('Content-Type')) this.headers.response.push('Content-Type');\n      }\n    }\n    return this.headers;\n  };\n  /**\n   * Determine if the operation has an operation present in its schema. Note that if one is present\n   * in the schema but is an empty string then this will return false.\n   *\n   */\n  Operation.prototype.hasOperationId = function () {\n    return Boolean('operationId' in this.schema && this.schema.operationId.length);\n  };\n  /**\n   * Get an `operationId` for this operation. If one is not present (it's not required by the spec!)\n   * a hash of the path and method will be returned instead.\n   *\n   */\n  Operation.prototype.getOperationId = function (opts) {\n    function sanitize(id) {\n      // We aren't sanitizing underscores here by default in order to preserve operation IDs that\n      // were already generated with this method in the past.\n      return id.replace((opts === null || opts === void 0 ? void 0 : opts.camelCase) ? /[^a-zA-Z0-9_]/g : /[^a-zA-Z0-9]/g, '-') // Remove weird characters\n      .replace(/--+/g, '-') // Remove double --'s\n      .replace(/^-|-$/g, ''); // Don't start or end with -\n    }\n    var operationId;\n    if (this.hasOperationId()) {\n      operationId = this.schema.operationId;\n    } else {\n      operationId = sanitize(this.path).toLowerCase();\n    }\n    var method = this.method.toLowerCase();\n    if (opts === null || opts === void 0 ? void 0 : opts.camelCase) {\n      operationId = operationId.replace(/[^a-zA-Z0-9_]+(.)/g, function (_, chr) {\n        return chr.toUpperCase();\n      });\n      if (this.hasOperationId()) {\n        operationId = sanitize(operationId);\n      }\n      // Never start with a number.\n      operationId = operationId.replace(/^[0-9]/g, function (match) {\n        return \"_\".concat(match);\n      });\n      // Ensure that the first character of an `operationId` is always lowercase.\n      operationId = operationId.charAt(0).toLowerCase() + operationId.slice(1);\n      // If the generated `operationId` already starts with the method (eg. `getPets`) we don't want\n      // to double it up into `getGetPets`.\n      if (operationId.startsWith(method)) {\n        return operationId;\n      }\n      // If this operation already has an `operationId` and we just cleaned it up then we shouldn't\n      // prefix it with an HTTP method.\n      if (this.hasOperationId()) {\n        return operationId;\n      }\n      // Because we're merging the `operationId` into an HTTP method we need to reset the first\n      // character of it back to lowercase so end up with `getBuster`, not `getbuster`.\n      operationId = operationId.charAt(0).toUpperCase() + operationId.slice(1);\n      return \"\".concat(method).concat(operationId);\n    } else if (this.hasOperationId()) {\n      return operationId;\n    }\n    return \"\".concat(method, \"_\").concat(operationId);\n  };\n  /**\n   * Return an array of all tags, and their metadata, that exist on this operation.\n   *\n   */\n  Operation.prototype.getTags = function () {\n    if (!('tags' in this.schema)) {\n      return [];\n    }\n    var oasTagMap = new Map();\n    if ('tags' in this.api) {\n      this.api.tags.forEach(function (tag) {\n        oasTagMap.set(tag.name, tag);\n      });\n    }\n    var oasTags = Object.fromEntries(oasTagMap);\n    var tags = [];\n    if (Array.isArray(this.schema.tags)) {\n      this.schema.tags.forEach(function (tag) {\n        if (tag in oasTags) {\n          tags.push(oasTags[tag]);\n        } else {\n          tags.push({\n            name: tag\n          });\n        }\n      });\n    }\n    return tags;\n  };\n  /**\n   * Return is the operation is flagged as `deprecated` or not.\n   *\n   */\n  Operation.prototype.isDeprecated = function () {\n    return 'deprecated' in this.schema ? this.schema.deprecated : false;\n  };\n  /**\n   * Determine if the operation has any (non-request body) parameters.\n   *\n   */\n  Operation.prototype.hasParameters = function () {\n    return !!this.getParameters().length;\n  };\n  /**\n   * Return the parameters (non-request body) on the operation.\n   *\n   */\n  Operation.prototype.getParameters = function () {\n    var _a, _b, _c, _d;\n    var parameters = ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.parameters) || [];\n    var commonParams = ((_d = (_c = (_b = this.api) === null || _b === void 0 ? void 0 : _b.paths) === null || _c === void 0 ? void 0 : _c[this.path]) === null || _d === void 0 ? void 0 : _d.parameters) || [];\n    if (commonParams.length) {\n      parameters = parameters.concat((0, dedupe_common_parameters_1[\"default\"])(parameters, commonParams) || []);\n    }\n    return parameters;\n  };\n  /**\n   * Determine if this operation has any required parameters.\n   *\n   */\n  Operation.prototype.hasRequiredParameters = function () {\n    return this.getParameters().some(function (param) {\n      return 'required' in param && param.required;\n    });\n  };\n  /**\n   * Convert the operation into an array of JSON Schema schemas for each available type of\n   * parameter available on the operation.\n   *\n   */\n  Operation.prototype.getParametersAsJSONSchema = function (opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    return (0, get_parameters_as_json_schema_1[\"default\"])(this, this.api, __assign({\n      includeDiscriminatorMappingRefs: true,\n      transformer: function (s) {\n        return s;\n      }\n    }, opts));\n  };\n  /**\n   * Get a single response for this status code, formatted as JSON schema.\n   *\n   * @param statusCode Status code to pull a JSON Schema response for.\n   */\n  Operation.prototype.getResponseAsJSONSchema = function (statusCode, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    return (0, get_response_as_json_schema_1[\"default\"])(this, this.api, statusCode, __assign({\n      includeDiscriminatorMappingRefs: true,\n      transformer: function (s) {\n        return s;\n      }\n    }, opts));\n  };\n  /**\n   * Get an array of all valid response status codes for this operation.\n   *\n   */\n  Operation.prototype.getResponseStatusCodes = function () {\n    return this.schema.responses ? Object.keys(this.schema.responses) : [];\n  };\n  /**\n   * Determine if the operation has any request bodies.\n   *\n   */\n  Operation.prototype.hasRequestBody = function () {\n    return !!this.schema.requestBody;\n  };\n  /**\n   * Retrieve the list of all available media types that the operations request body can accept.\n   *\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#mediaTypeObject}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#mediaTypeObject}\n   */\n  Operation.prototype.getRequestBodyMediaTypes = function () {\n    if (!this.hasRequestBody()) {\n      return [];\n    }\n    var requestBody = this.schema.requestBody;\n    if (RMOAS.isRef(requestBody)) {\n      // If the request body is still a `$ref` pointer we should return false because this library\n      // assumes that you've run dereferencing beforehand.\n      return [];\n    }\n    return Object.keys(requestBody.content);\n  };\n  /**\n   * Determine if this operation has a required request body.\n   *\n   */\n  Operation.prototype.hasRequiredRequestBody = function () {\n    if (!this.hasRequestBody()) {\n      return false;\n    }\n    var requestBody = this.schema.requestBody;\n    if (RMOAS.isRef(requestBody)) {\n      return false;\n    }\n    if (requestBody.required) {\n      return true;\n    }\n    // The OpenAPI spec isn't clear on the differentiation between schema `required` and\n    // `requestBody.required` because you can have required top-level schema properties but a\n    // non-required requestBody that negates each other.\n    //\n    // To kind of work ourselves around this and present a better QOL for this accessor, if at this\n    // final point where we don't have a required request body, but the underlying Media Type Object\n    // schema says that it has required properties then we should ultimately recognize that this\n    // request body is required -- even as the request body description says otherwise.\n    return !!this.getParametersAsJSONSchema().filter(function (js) {\n      return ['body', 'formData'].includes(js.type);\n    }).find(function (js) {\n      return js.schema && Array.isArray(js.schema.required) && js.schema.required.length;\n    });\n  };\n  /**\n   * Retrieve a specific request body content schema off this operation.\n   *\n   * If no media type is supplied this will return either the first available JSON-like request\n   * body, or the first available if there are no JSON-like media types present. When this return\n   * comes back it's in the form of an array with the first key being the selected media type,\n   * followed by the media type object in question.\n   *\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#mediaTypeObject}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#mediaTypeObject}\n   * @param mediaType Specific request body media type to retrieve if present.\n   */\n  Operation.prototype.getRequestBody = function (mediaType) {\n    if (!this.hasRequestBody()) {\n      return false;\n    }\n    var requestBody = this.schema.requestBody;\n    if (RMOAS.isRef(requestBody)) {\n      // If the request body is still a `$ref` pointer we should return false because this library\n      // assumes that you've run dereferencing beforehand.\n      return false;\n    }\n    if (mediaType) {\n      if (!(mediaType in requestBody.content)) {\n        return false;\n      }\n      return requestBody.content[mediaType];\n    }\n    // Since no media type was supplied we need to find either the first JSON-like media type that\n    // we've got, or the first available of anything else if no JSON-like media types are present.\n    var availableMediaType;\n    var mediaTypes = this.getRequestBodyMediaTypes();\n    mediaTypes.forEach(function (mt) {\n      if (!availableMediaType && matches_mimetype_1[\"default\"].json(mt)) {\n        availableMediaType = mt;\n      }\n    });\n    if (!availableMediaType) {\n      mediaTypes.forEach(function (mt) {\n        if (!availableMediaType) {\n          availableMediaType = mt;\n        }\n      });\n    }\n    if (availableMediaType) {\n      return __spreadArray([availableMediaType, requestBody.content[availableMediaType]], requestBody.description ? [requestBody.description] : [], true);\n    }\n    return false;\n  };\n  /**\n   * Retrieve an array of request body examples that this operation has.\n   *\n   */\n  Operation.prototype.getRequestBodyExamples = function () {\n    if (this.requestBodyExamples) {\n      return this.requestBodyExamples;\n    }\n    this.requestBodyExamples = (0, get_requestbody_examples_1[\"default\"])(this.schema);\n    return this.requestBodyExamples;\n  };\n  /**\n   * Return a specific response out of the operation by a given HTTP status code.\n   *\n   * @param statusCode Status code to pull a response object for.\n   */\n  Operation.prototype.getResponseByStatusCode = function (statusCode) {\n    if (!this.schema.responses) {\n      return false;\n    }\n    if (typeof this.schema.responses[statusCode] === 'undefined') {\n      return false;\n    }\n    var response = this.schema.responses[statusCode];\n    if (RMOAS.isRef(response)) {\n      return false;\n    }\n    // Remove the reference from the type, because it will already be dereferenced.\n    return response;\n  };\n  /**\n   * Retrieve an array of response examples that this operation has.\n   *\n   */\n  Operation.prototype.getResponseExamples = function () {\n    if (this.responseExamples) {\n      return this.responseExamples;\n    }\n    // @todo Remove this `as` once we convert getResponseExamples\n    this.responseExamples = (0, get_response_examples_1[\"default\"])(this.schema);\n    return this.responseExamples;\n  };\n  /**\n   * Determine if the operation has callbacks.\n   *\n   */\n  Operation.prototype.hasCallbacks = function () {\n    return !!this.schema.callbacks;\n  };\n  /**\n   * Retrieve a specific callback.\n   *\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#callbackObject}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#callbackObject}\n   * @param identifier Callback identifier to look for.\n   * @param expression Callback expression to look for.\n   * @param method HTTP Method on the callback to look for.\n   */\n  Operation.prototype.getCallback = function (identifier, expression, method) {\n    if (!this.schema.callbacks) return false;\n    // The usage of `as` in the below is to remove the possibility of a ref type, since we've\n    // dereferenced.\n    var callback = this.schema.callbacks[identifier] ? this.schema.callbacks[identifier][expression] : false;\n    if (!callback || !callback[method]) return false;\n    return new Callback(this.api, expression, method, callback[method], identifier, callback);\n  };\n  /**\n   * Retrieve an array of operations created from each callback.\n   *\n   */\n  Operation.prototype.getCallbacks = function () {\n    var _this = this;\n    var callbackOperations = [];\n    if (!this.hasCallbacks()) return false;\n    Object.keys(this.schema.callbacks).forEach(function (callback) {\n      Object.keys(_this.schema.callbacks[callback]).forEach(function (expression) {\n        var cb = _this.schema.callbacks[callback];\n        if (!RMOAS.isRef(cb)) {\n          var exp = cb[expression];\n          if (!RMOAS.isRef(exp)) {\n            Object.keys(exp).forEach(function (method) {\n              if (!utils_1.supportedMethods.has(method)) return;\n              callbackOperations.push(_this.getCallback(callback, expression, method));\n            });\n          }\n        }\n      });\n    });\n    return callbackOperations;\n  };\n  /**\n   * Retrieve an array of callback examples that this operation has.\n   *\n   */\n  Operation.prototype.getCallbackExamples = function () {\n    if (this.callbackExamples) {\n      return this.callbackExamples;\n    }\n    this.callbackExamples = (0, get_callback_examples_1[\"default\"])(this.schema);\n    return this.callbackExamples;\n  };\n  /**\n   * Determine if a given a custom specification extension exists within the operation.\n   *\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n   * @param extension Specification extension to lookup.\n   */\n  Operation.prototype.hasExtension = function (extension) {\n    return Boolean(this.schema && extension in this.schema);\n  };\n  /**\n   * Retrieve a custom specification extension off of the operation.\n   *\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n   * @param extension Specification extension to lookup.\n   */\n  Operation.prototype.getExtension = function (extension) {\n    var _a;\n    return (_a = this.schema) === null || _a === void 0 ? void 0 : _a[extension];\n  };\n  return Operation;\n}();\nexports[\"default\"] = Operation;\nvar Callback = /** @class */function (_super) {\n  __extends(Callback, _super);\n  function Callback(oas, path, method, operation, identifier, parentPathItem) {\n    var _this = _super.call(this, oas, path, method, operation) || this;\n    _this.identifier = identifier;\n    _this.parentSchema = parentPathItem;\n    return _this;\n  }\n  /**\n   * Return the primary identifier for this callback.\n   *\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#callback-object}\n   * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#callbackObject}\n   */\n  Callback.prototype.getIdentifier = function () {\n    return this.identifier;\n  };\n  Callback.prototype.getSummary = function () {\n    var _a;\n    if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.summary) {\n      return this.schema.summary.trim();\n    } else if (this.parentSchema.summary) {\n      return this.parentSchema.summary;\n    }\n    return undefined;\n  };\n  Callback.prototype.getDescription = function () {\n    var _a;\n    if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.description) {\n      return this.schema.description.trim();\n    } else if (this.parentSchema.description) {\n      return this.parentSchema.description;\n    }\n    return undefined;\n  };\n  Callback.prototype.getParameters = function () {\n    var _a;\n    var parameters = ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.parameters) || [];\n    var commonParams = this.parentSchema.parameters || [];\n    if (commonParams.length) {\n      parameters = parameters.concat((0, dedupe_common_parameters_1[\"default\"])(parameters, commonParams) || []);\n    }\n    return parameters;\n  };\n  return Callback;\n}(Operation);\nexports.Callback = Callback;\nvar Webhook = /** @class */function (_super) {\n  __extends(Webhook, _super);\n  function Webhook() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return Webhook;\n}(Operation);\nexports.Webhook = Webhook;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__createBinding","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__spreadArray","to","from","pack","l","ar","slice","concat","__importDefault","exports","Webhook","Callback","dedupe_common_parameters_1","require","find_schema_definition_1","matches_mimetype_1","get_callback_examples_1","get_parameters_as_json_schema_1","get_requestbody_examples_1","get_response_as_json_schema_1","get_response_examples_1","RMOAS","utils_1","Operation","api","path","method","operation","schema","contentType","requestBodyExamples","responseExamples","callbackExamples","getSummary","_a","summary","trim","paths","getDescription","description","getContentType","_this","types","requestBody","$ref","keys","content","forEach","json","isFormUrlEncoded","formUrlEncoded","isMultipart","multipart","isJson","isXml","xml","getSecurity","_b","components","securitySchemes","security","getSecurityWithTypes","filterInvalid","securityRequirements","map","requirement","e","keysWithTypes","key","type","scheme","_key","filter","prepareSecurity","securitiesWithTypes","reduce","prev","securities","exists","findIndex","sec","push","getHeaders","headers","request","response","Header","h","name","Bearer","Basic","OAuth2","Cookie","parameters","responses","r","a","includes","some","hasOperationId","Boolean","operationId","getOperationId","opts","sanitize","id","replace","camelCase","toLowerCase","_","chr","toUpperCase","match","charAt","startsWith","getTags","oasTagMap","Map","tags","tag","set","oasTags","fromEntries","isArray","isDeprecated","deprecated","hasParameters","getParameters","_c","_d","commonParams","hasRequiredParameters","param","required","getParametersAsJSONSchema","includeDiscriminatorMappingRefs","transformer","getResponseAsJSONSchema","statusCode","getResponseStatusCodes","hasRequestBody","getRequestBodyMediaTypes","isRef","hasRequiredRequestBody","js","find","getRequestBody","mediaType","availableMediaType","mediaTypes","mt","getRequestBodyExamples","getResponseByStatusCode","getResponseExamples","hasCallbacks","callbacks","getCallback","identifier","expression","callback","getCallbacks","callbackOperations","cb","exp","supportedMethods","has","getCallbackExamples","hasExtension","extension","getExtension","_super","oas","parentPathItem","parentSchema","getIdentifier"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/.api/apis/aivideoapi/node_modules/oas/dist/operation.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.Webhook = exports.Callback = void 0;\nvar dedupe_common_parameters_1 = __importDefault(require(\"./lib/dedupe-common-parameters\"));\nvar find_schema_definition_1 = __importDefault(require(\"./lib/find-schema-definition\"));\nvar matches_mimetype_1 = __importDefault(require(\"./lib/matches-mimetype\"));\nvar get_callback_examples_1 = __importDefault(require(\"./operation/get-callback-examples\"));\nvar get_parameters_as_json_schema_1 = __importDefault(require(\"./operation/get-parameters-as-json-schema\"));\nvar get_requestbody_examples_1 = __importDefault(require(\"./operation/get-requestbody-examples\"));\nvar get_response_as_json_schema_1 = __importDefault(require(\"./operation/get-response-as-json-schema\"));\nvar get_response_examples_1 = __importDefault(require(\"./operation/get-response-examples\"));\nvar RMOAS = __importStar(require(\"./rmoas.types\"));\nvar utils_1 = require(\"./utils\");\nvar Operation = /** @class */ (function () {\n    function Operation(api, path, method, operation) {\n        this.schema = operation;\n        this.api = api;\n        this.path = path;\n        this.method = method;\n        this.contentType = undefined;\n        this.requestBodyExamples = undefined;\n        this.responseExamples = undefined;\n        this.callbackExamples = undefined;\n    }\n    Operation.prototype.getSummary = function () {\n        var _a;\n        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.summary) {\n            return this.schema.summary.trim();\n        }\n        else if (this.api.paths[this.path].summary) {\n            return this.api.paths[this.path].summary;\n        }\n        return undefined;\n    };\n    Operation.prototype.getDescription = function () {\n        var _a;\n        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.description) {\n            return this.schema.description.trim();\n        }\n        else if (this.api.paths[this.path].description) {\n            return this.api.paths[this.path].description;\n        }\n        return undefined;\n    };\n    Operation.prototype.getContentType = function () {\n        var _this = this;\n        if (this.contentType) {\n            return this.contentType;\n        }\n        var types = [];\n        if (this.schema.requestBody) {\n            if ('$ref' in this.schema.requestBody) {\n                this.schema.requestBody = (0, find_schema_definition_1[\"default\"])(this.schema.requestBody.$ref, this.api);\n            }\n            if ('content' in this.schema.requestBody) {\n                types = Object.keys(this.schema.requestBody.content);\n            }\n        }\n        this.contentType = 'application/json';\n        if (types && types.length) {\n            this.contentType = types[0];\n        }\n        // Favor JSON if it exists\n        types.forEach(function (t) {\n            if (matches_mimetype_1[\"default\"].json(t)) {\n                _this.contentType = t;\n            }\n        });\n        return this.contentType;\n    };\n    Operation.prototype.isFormUrlEncoded = function () {\n        return matches_mimetype_1[\"default\"].formUrlEncoded(this.getContentType());\n    };\n    Operation.prototype.isMultipart = function () {\n        return matches_mimetype_1[\"default\"].multipart(this.getContentType());\n    };\n    Operation.prototype.isJson = function () {\n        return matches_mimetype_1[\"default\"].json(this.getContentType());\n    };\n    Operation.prototype.isXml = function () {\n        return matches_mimetype_1[\"default\"].xml(this.getContentType());\n    };\n    /**\n     * Returns an array of all security requirements associated wtih this operation. If none are\n     * defined at the operation level, the securities for the entire API definition are returned\n     * (with an empty array as a final fallback).\n     *\n     */\n    Operation.prototype.getSecurity = function () {\n        var _a, _b;\n        if (!((_b = (_a = this.api) === null || _a === void 0 ? void 0 : _a.components) === null || _b === void 0 ? void 0 : _b.securitySchemes) || !Object.keys(this.api.components.securitySchemes).length) {\n            return [];\n        }\n        return this.schema.security || this.api.security || [];\n    };\n    /**\n     * Retrieve a collection of grouped security schemes. The inner array determines AND-grouped\n     * security schemes, the outer array determines OR-groups.\n     *\n     * @see {@link https://swagger.io/docs/specification/authentication/#multiple}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#security-requirement-object}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#securityRequirementObject}\n     * @param filterInvalid Optional flag that, when set to `true`, filters out invalid/nonexistent\n     *    security schemes, rather than returning `false`.\n     */\n    Operation.prototype.getSecurityWithTypes = function (filterInvalid) {\n        var _this = this;\n        if (filterInvalid === void 0) { filterInvalid = false; }\n        var securityRequirements = this.getSecurity();\n        return securityRequirements.map(function (requirement) {\n            var keys;\n            try {\n                keys = Object.keys(requirement);\n            }\n            catch (e) {\n                return false;\n            }\n            var keysWithTypes = keys.map(function (key) {\n                var security;\n                try {\n                    // Remove the reference type, because we know this will be dereferenced\n                    security = _this.api.components.securitySchemes[key];\n                }\n                catch (e) {\n                    return false;\n                }\n                if (!security)\n                    return false;\n                var type = null;\n                if (security.type === 'http') {\n                    if (security.scheme === 'basic')\n                        type = 'Basic';\n                    else if (security.scheme === 'bearer')\n                        type = 'Bearer';\n                    else\n                        type = security.type;\n                }\n                else if (security.type === 'oauth2') {\n                    type = 'OAuth2';\n                }\n                else if (security.type === 'apiKey') {\n                    if (security[\"in\"] === 'query')\n                        type = 'Query';\n                    else if (security[\"in\"] === 'header')\n                        type = 'Header';\n                    else if (security[\"in\"] === 'cookie')\n                        type = 'Cookie';\n                    else\n                        type = security.type;\n                }\n                else {\n                    return false;\n                }\n                return {\n                    type: type,\n                    security: __assign(__assign({}, security), { _key: key })\n                };\n            });\n            if (filterInvalid)\n                return keysWithTypes.filter(function (key) { return key !== false; });\n            return keysWithTypes;\n        });\n    };\n    /**\n     * Retrieve an object where the keys are unique scheme types, and the values are arrays\n     * containing each security scheme of that type.\n     *\n     */\n    Operation.prototype.prepareSecurity = function () {\n        var securitiesWithTypes = this.getSecurityWithTypes();\n        return securitiesWithTypes.reduce(function (prev, securities) {\n            if (!securities)\n                return prev;\n            securities.forEach(function (security) {\n                // Remove non-existent schemes\n                if (!security)\n                    return;\n                if (!prev[security.type])\n                    prev[security.type] = [];\n                // Only add schemes we haven't seen yet.\n                var exists = prev[security.type].findIndex(function (sec) { return sec._key === security.security._key; });\n                if (exists < 0) {\n                    prev[security.type].push(security.security);\n                }\n            });\n            return prev;\n        }, {});\n    };\n    Operation.prototype.getHeaders = function () {\n        var _this = this;\n        this.headers = {\n            request: [],\n            response: []\n        };\n        var security = this.prepareSecurity();\n        if (security.Header) {\n            this.headers.request = security.Header.map(function (h) {\n                return h.name;\n            });\n        }\n        if (security.Bearer || security.Basic || security.OAuth2) {\n            this.headers.request.push('Authorization');\n        }\n        if (security.Cookie) {\n            this.headers.request.push('Cookie');\n        }\n        if (this.schema.parameters) {\n            this.headers.request = this.headers.request.concat(\n            // Remove the reference object because we will have already dereferenced\n            this.schema.parameters\n                .map(function (p) {\n                if (p[\"in\"] && p[\"in\"] === 'header')\n                    return p.name;\n                return undefined;\n            })\n                .filter(function (p) { return p; }));\n        }\n        if (this.schema.responses) {\n            this.headers.response = Object.keys(this.schema.responses)\n                // Remove the reference object because we will have already dereferenced\n                .filter(function (r) { return _this.schema.responses[r].headers; })\n                .map(function (r) {\n                // Remove the reference object because we will have already dereferenced\n                return Object.keys(_this.schema.responses[r].headers);\n            })\n                .reduce(function (a, b) { return a.concat(b); }, []);\n        }\n        // If the operation doesn't already specify a 'content-type' request header,\n        // we check if the path operation request body contains content, which implies that\n        // we should also include the 'content-type' header.\n        if (!this.headers.request.includes('Content-Type') && this.schema.requestBody) {\n            if (this.schema.requestBody.content &&\n                Object.keys(this.schema.requestBody.content)) {\n                this.headers.request.push('Content-Type');\n            }\n        }\n        // This is a similar approach, but in this case if we check the response content\n        // and prioritize the 'accept' request header and 'content-type' request header\n        if (this.schema.responses) {\n            if (Object.keys(this.schema.responses).some(function (response) { return !!_this.schema.responses[response].content; })) {\n                if (!this.headers.request.includes('Accept'))\n                    this.headers.request.push('Accept');\n                if (!this.headers.response.includes('Content-Type'))\n                    this.headers.response.push('Content-Type');\n            }\n        }\n        return this.headers;\n    };\n    /**\n     * Determine if the operation has an operation present in its schema. Note that if one is present\n     * in the schema but is an empty string then this will return false.\n     *\n     */\n    Operation.prototype.hasOperationId = function () {\n        return Boolean('operationId' in this.schema && this.schema.operationId.length);\n    };\n    /**\n     * Get an `operationId` for this operation. If one is not present (it's not required by the spec!)\n     * a hash of the path and method will be returned instead.\n     *\n     */\n    Operation.prototype.getOperationId = function (opts) {\n        function sanitize(id) {\n            // We aren't sanitizing underscores here by default in order to preserve operation IDs that\n            // were already generated with this method in the past.\n            return id\n                .replace((opts === null || opts === void 0 ? void 0 : opts.camelCase) ? /[^a-zA-Z0-9_]/g : /[^a-zA-Z0-9]/g, '-') // Remove weird characters\n                .replace(/--+/g, '-') // Remove double --'s\n                .replace(/^-|-$/g, ''); // Don't start or end with -\n        }\n        var operationId;\n        if (this.hasOperationId()) {\n            operationId = this.schema.operationId;\n        }\n        else {\n            operationId = sanitize(this.path).toLowerCase();\n        }\n        var method = this.method.toLowerCase();\n        if (opts === null || opts === void 0 ? void 0 : opts.camelCase) {\n            operationId = operationId.replace(/[^a-zA-Z0-9_]+(.)/g, function (_, chr) { return chr.toUpperCase(); });\n            if (this.hasOperationId()) {\n                operationId = sanitize(operationId);\n            }\n            // Never start with a number.\n            operationId = operationId.replace(/^[0-9]/g, function (match) { return \"_\".concat(match); });\n            // Ensure that the first character of an `operationId` is always lowercase.\n            operationId = operationId.charAt(0).toLowerCase() + operationId.slice(1);\n            // If the generated `operationId` already starts with the method (eg. `getPets`) we don't want\n            // to double it up into `getGetPets`.\n            if (operationId.startsWith(method)) {\n                return operationId;\n            }\n            // If this operation already has an `operationId` and we just cleaned it up then we shouldn't\n            // prefix it with an HTTP method.\n            if (this.hasOperationId()) {\n                return operationId;\n            }\n            // Because we're merging the `operationId` into an HTTP method we need to reset the first\n            // character of it back to lowercase so end up with `getBuster`, not `getbuster`.\n            operationId = operationId.charAt(0).toUpperCase() + operationId.slice(1);\n            return \"\".concat(method).concat(operationId);\n        }\n        else if (this.hasOperationId()) {\n            return operationId;\n        }\n        return \"\".concat(method, \"_\").concat(operationId);\n    };\n    /**\n     * Return an array of all tags, and their metadata, that exist on this operation.\n     *\n     */\n    Operation.prototype.getTags = function () {\n        if (!('tags' in this.schema)) {\n            return [];\n        }\n        var oasTagMap = new Map();\n        if ('tags' in this.api) {\n            this.api.tags.forEach(function (tag) {\n                oasTagMap.set(tag.name, tag);\n            });\n        }\n        var oasTags = Object.fromEntries(oasTagMap);\n        var tags = [];\n        if (Array.isArray(this.schema.tags)) {\n            this.schema.tags.forEach(function (tag) {\n                if (tag in oasTags) {\n                    tags.push(oasTags[tag]);\n                }\n                else {\n                    tags.push({\n                        name: tag\n                    });\n                }\n            });\n        }\n        return tags;\n    };\n    /**\n     * Return is the operation is flagged as `deprecated` or not.\n     *\n     */\n    Operation.prototype.isDeprecated = function () {\n        return 'deprecated' in this.schema ? this.schema.deprecated : false;\n    };\n    /**\n     * Determine if the operation has any (non-request body) parameters.\n     *\n     */\n    Operation.prototype.hasParameters = function () {\n        return !!this.getParameters().length;\n    };\n    /**\n     * Return the parameters (non-request body) on the operation.\n     *\n     */\n    Operation.prototype.getParameters = function () {\n        var _a, _b, _c, _d;\n        var parameters = (((_a = this.schema) === null || _a === void 0 ? void 0 : _a.parameters) || []);\n        var commonParams = (((_d = (_c = (_b = this.api) === null || _b === void 0 ? void 0 : _b.paths) === null || _c === void 0 ? void 0 : _c[this.path]) === null || _d === void 0 ? void 0 : _d.parameters) || []);\n        if (commonParams.length) {\n            parameters = parameters.concat((0, dedupe_common_parameters_1[\"default\"])(parameters, commonParams) || []);\n        }\n        return parameters;\n    };\n    /**\n     * Determine if this operation has any required parameters.\n     *\n     */\n    Operation.prototype.hasRequiredParameters = function () {\n        return this.getParameters().some(function (param) { return 'required' in param && param.required; });\n    };\n    /**\n     * Convert the operation into an array of JSON Schema schemas for each available type of\n     * parameter available on the operation.\n     *\n     */\n    Operation.prototype.getParametersAsJSONSchema = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        return (0, get_parameters_as_json_schema_1[\"default\"])(this, this.api, __assign({ includeDiscriminatorMappingRefs: true, transformer: function (s) { return s; } }, opts));\n    };\n    /**\n     * Get a single response for this status code, formatted as JSON schema.\n     *\n     * @param statusCode Status code to pull a JSON Schema response for.\n     */\n    Operation.prototype.getResponseAsJSONSchema = function (statusCode, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (0, get_response_as_json_schema_1[\"default\"])(this, this.api, statusCode, __assign({ includeDiscriminatorMappingRefs: true, transformer: function (s) { return s; } }, opts));\n    };\n    /**\n     * Get an array of all valid response status codes for this operation.\n     *\n     */\n    Operation.prototype.getResponseStatusCodes = function () {\n        return this.schema.responses ? Object.keys(this.schema.responses) : [];\n    };\n    /**\n     * Determine if the operation has any request bodies.\n     *\n     */\n    Operation.prototype.hasRequestBody = function () {\n        return !!this.schema.requestBody;\n    };\n    /**\n     * Retrieve the list of all available media types that the operations request body can accept.\n     *\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#mediaTypeObject}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#mediaTypeObject}\n     */\n    Operation.prototype.getRequestBodyMediaTypes = function () {\n        if (!this.hasRequestBody()) {\n            return [];\n        }\n        var requestBody = this.schema.requestBody;\n        if (RMOAS.isRef(requestBody)) {\n            // If the request body is still a `$ref` pointer we should return false because this library\n            // assumes that you've run dereferencing beforehand.\n            return [];\n        }\n        return Object.keys(requestBody.content);\n    };\n    /**\n     * Determine if this operation has a required request body.\n     *\n     */\n    Operation.prototype.hasRequiredRequestBody = function () {\n        if (!this.hasRequestBody()) {\n            return false;\n        }\n        var requestBody = this.schema.requestBody;\n        if (RMOAS.isRef(requestBody)) {\n            return false;\n        }\n        if (requestBody.required) {\n            return true;\n        }\n        // The OpenAPI spec isn't clear on the differentiation between schema `required` and\n        // `requestBody.required` because you can have required top-level schema properties but a\n        // non-required requestBody that negates each other.\n        //\n        // To kind of work ourselves around this and present a better QOL for this accessor, if at this\n        // final point where we don't have a required request body, but the underlying Media Type Object\n        // schema says that it has required properties then we should ultimately recognize that this\n        // request body is required -- even as the request body description says otherwise.\n        return !!this.getParametersAsJSONSchema()\n            .filter(function (js) { return ['body', 'formData'].includes(js.type); })\n            .find(function (js) { return js.schema && Array.isArray(js.schema.required) && js.schema.required.length; });\n    };\n    /**\n     * Retrieve a specific request body content schema off this operation.\n     *\n     * If no media type is supplied this will return either the first available JSON-like request\n     * body, or the first available if there are no JSON-like media types present. When this return\n     * comes back it's in the form of an array with the first key being the selected media type,\n     * followed by the media type object in question.\n     *\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#mediaTypeObject}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#mediaTypeObject}\n     * @param mediaType Specific request body media type to retrieve if present.\n     */\n    Operation.prototype.getRequestBody = function (mediaType) {\n        if (!this.hasRequestBody()) {\n            return false;\n        }\n        var requestBody = this.schema.requestBody;\n        if (RMOAS.isRef(requestBody)) {\n            // If the request body is still a `$ref` pointer we should return false because this library\n            // assumes that you've run dereferencing beforehand.\n            return false;\n        }\n        if (mediaType) {\n            if (!(mediaType in requestBody.content)) {\n                return false;\n            }\n            return requestBody.content[mediaType];\n        }\n        // Since no media type was supplied we need to find either the first JSON-like media type that\n        // we've got, or the first available of anything else if no JSON-like media types are present.\n        var availableMediaType;\n        var mediaTypes = this.getRequestBodyMediaTypes();\n        mediaTypes.forEach(function (mt) {\n            if (!availableMediaType && matches_mimetype_1[\"default\"].json(mt)) {\n                availableMediaType = mt;\n            }\n        });\n        if (!availableMediaType) {\n            mediaTypes.forEach(function (mt) {\n                if (!availableMediaType) {\n                    availableMediaType = mt;\n                }\n            });\n        }\n        if (availableMediaType) {\n            return __spreadArray([\n                availableMediaType,\n                requestBody.content[availableMediaType]\n            ], (requestBody.description ? [requestBody.description] : []), true);\n        }\n        return false;\n    };\n    /**\n     * Retrieve an array of request body examples that this operation has.\n     *\n     */\n    Operation.prototype.getRequestBodyExamples = function () {\n        if (this.requestBodyExamples) {\n            return this.requestBodyExamples;\n        }\n        this.requestBodyExamples = (0, get_requestbody_examples_1[\"default\"])(this.schema);\n        return this.requestBodyExamples;\n    };\n    /**\n     * Return a specific response out of the operation by a given HTTP status code.\n     *\n     * @param statusCode Status code to pull a response object for.\n     */\n    Operation.prototype.getResponseByStatusCode = function (statusCode) {\n        if (!this.schema.responses) {\n            return false;\n        }\n        if (typeof this.schema.responses[statusCode] === 'undefined') {\n            return false;\n        }\n        var response = this.schema.responses[statusCode];\n        if (RMOAS.isRef(response)) {\n            return false;\n        }\n        // Remove the reference from the type, because it will already be dereferenced.\n        return response;\n    };\n    /**\n     * Retrieve an array of response examples that this operation has.\n     *\n     */\n    Operation.prototype.getResponseExamples = function () {\n        if (this.responseExamples) {\n            return this.responseExamples;\n        }\n        // @todo Remove this `as` once we convert getResponseExamples\n        this.responseExamples = (0, get_response_examples_1[\"default\"])(this.schema);\n        return this.responseExamples;\n    };\n    /**\n     * Determine if the operation has callbacks.\n     *\n     */\n    Operation.prototype.hasCallbacks = function () {\n        return !!this.schema.callbacks;\n    };\n    /**\n     * Retrieve a specific callback.\n     *\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#callbackObject}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#callbackObject}\n     * @param identifier Callback identifier to look for.\n     * @param expression Callback expression to look for.\n     * @param method HTTP Method on the callback to look for.\n     */\n    Operation.prototype.getCallback = function (identifier, expression, method) {\n        if (!this.schema.callbacks)\n            return false;\n        // The usage of `as` in the below is to remove the possibility of a ref type, since we've\n        // dereferenced.\n        var callback = this.schema.callbacks[identifier]\n            ? this.schema.callbacks[identifier][expression]\n            : false;\n        if (!callback || !callback[method])\n            return false;\n        return new Callback(this.api, expression, method, callback[method], identifier, callback);\n    };\n    /**\n     * Retrieve an array of operations created from each callback.\n     *\n     */\n    Operation.prototype.getCallbacks = function () {\n        var _this = this;\n        var callbackOperations = [];\n        if (!this.hasCallbacks())\n            return false;\n        Object.keys(this.schema.callbacks).forEach(function (callback) {\n            Object.keys(_this.schema.callbacks[callback]).forEach(function (expression) {\n                var cb = _this.schema.callbacks[callback];\n                if (!RMOAS.isRef(cb)) {\n                    var exp = cb[expression];\n                    if (!RMOAS.isRef(exp)) {\n                        Object.keys(exp).forEach(function (method) {\n                            if (!utils_1.supportedMethods.has(method))\n                                return;\n                            callbackOperations.push(_this.getCallback(callback, expression, method));\n                        });\n                    }\n                }\n            });\n        });\n        return callbackOperations;\n    };\n    /**\n     * Retrieve an array of callback examples that this operation has.\n     *\n     */\n    Operation.prototype.getCallbackExamples = function () {\n        if (this.callbackExamples) {\n            return this.callbackExamples;\n        }\n        this.callbackExamples = (0, get_callback_examples_1[\"default\"])(this.schema);\n        return this.callbackExamples;\n    };\n    /**\n     * Determine if a given a custom specification extension exists within the operation.\n     *\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n     * @param extension Specification extension to lookup.\n     */\n    Operation.prototype.hasExtension = function (extension) {\n        return Boolean(this.schema && extension in this.schema);\n    };\n    /**\n     * Retrieve a custom specification extension off of the operation.\n     *\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n     * @param extension Specification extension to lookup.\n     */\n    Operation.prototype.getExtension = function (extension) {\n        var _a;\n        return (_a = this.schema) === null || _a === void 0 ? void 0 : _a[extension];\n    };\n    return Operation;\n}());\nexports[\"default\"] = Operation;\nvar Callback = /** @class */ (function (_super) {\n    __extends(Callback, _super);\n    function Callback(oas, path, method, operation, identifier, parentPathItem) {\n        var _this = _super.call(this, oas, path, method, operation) || this;\n        _this.identifier = identifier;\n        _this.parentSchema = parentPathItem;\n        return _this;\n    }\n    /**\n     * Return the primary identifier for this callback.\n     *\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#callback-object}\n     * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#callbackObject}\n     */\n    Callback.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Callback.prototype.getSummary = function () {\n        var _a;\n        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.summary) {\n            return this.schema.summary.trim();\n        }\n        else if (this.parentSchema.summary) {\n            return this.parentSchema.summary;\n        }\n        return undefined;\n    };\n    Callback.prototype.getDescription = function () {\n        var _a;\n        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.description) {\n            return this.schema.description.trim();\n        }\n        else if (this.parentSchema.description) {\n            return this.parentSchema.description;\n        }\n        return undefined;\n    };\n    Callback.prototype.getParameters = function () {\n        var _a;\n        var parameters = (((_a = this.schema) === null || _a === void 0 ? void 0 : _a.parameters) || []);\n        var commonParams = (this.parentSchema.parameters || []);\n        if (commonParams.length) {\n            parameters = parameters.concat((0, dedupe_common_parameters_1[\"default\"])(parameters, commonParams) || []);\n        }\n        return parameters;\n    };\n    return Callback;\n}(Operation));\nexports.Callback = Callback;\nvar Webhook = /** @class */ (function (_super) {\n    __extends(Webhook, _super);\n    function Webhook() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Webhook;\n}(Operation));\nexports.Webhook = Webhook;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}