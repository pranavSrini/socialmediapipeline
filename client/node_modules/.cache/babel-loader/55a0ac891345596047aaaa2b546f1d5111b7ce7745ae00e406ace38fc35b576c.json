{"ast":null,"code":"var _jsxFileName = \"/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState(''); // Store text from the textbox\n  const [selectedFile, setSelectedFile] = useState(null); // Store selected MP4 file\n  const [videoUrl, setVideoUrl] = useState(null); // Store the video URL after upload (if any)\n\n  // Handle MP4 file selection\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type === 'video/mp4') {\n      setSelectedFile(file);\n      console.log('Selected MP4 file:', file);\n    } else {\n      alert('Please select a valid MP4 file.');\n    }\n  };\n\n  // Handle video upload to server\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('No file selected!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('video', selectedFile);\n    fetch('http://localhost:3000/upload', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(data => {\n      console.log('Upload response:', data);\n      setVideoUrl(data.videoUrl); // Save the video URL if returned\n      alert('Video uploaded successfully!');\n    }).catch(err => {\n      console.error('Upload failed:', err);\n      alert('Video upload failed.');\n    });\n  };\n\n  // Handle video upload to YouTube\n  const handleUploadToYouTube = () => {\n    if (!videoUrl) {\n      alert('Please upload a video first!');\n      return;\n    }\n\n    // Redirect to YouTube login\n    window.location.assign(`http://localhost:5050/api/login?videoUrl=${encodeURIComponent(videoUrl)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Video and Upload to YouTube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your prompt:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Enter your prompt\",\n        style: {\n          padding: '8px',\n          width: '300px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/mp4\",\n        onChange: handleFileChange,\n        style: {\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload MP4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadToYouTube,\n        disabled: !videoUrl,\n        children: \"Upload to YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), videoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Video URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: videoUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: videoUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DjCgzF7TiBfBMCNir0T+1xCEhts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","selectedFile","setSelectedFile","videoUrl","setVideoUrl","handleFileChange","e","file","target","files","type","console","log","alert","handleUpload","formData","FormData","append","fetch","method","body","then","res","json","data","catch","err","error","handleUploadToYouTube","window","location","assign","encodeURIComponent","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","width","marginBottom","marginTop","accept","onClick","disabled","href","rel","_c","$RefreshReg$"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [prompt, setPrompt] = useState(''); // Store text from the textbox\n  const [selectedFile, setSelectedFile] = useState(null); // Store selected MP4 file\n  const [videoUrl, setVideoUrl] = useState(null); // Store the video URL after upload (if any)\n\n  // Handle MP4 file selection\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && file.type === 'video/mp4') {\n      setSelectedFile(file);\n      console.log('Selected MP4 file:', file);\n    } else {\n      alert('Please select a valid MP4 file.');\n    }\n  };\n\n  // Handle video upload to server\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('No file selected!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('video', selectedFile);\n\n    fetch('http://localhost:3000/upload', {\n      method: 'POST',\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Upload response:', data);\n        setVideoUrl(data.videoUrl); // Save the video URL if returned\n        alert('Video uploaded successfully!');\n      })\n      .catch((err) => {\n        console.error('Upload failed:', err);\n        alert('Video upload failed.');\n      });\n  };\n\n  // Handle video upload to YouTube\n  const handleUploadToYouTube = () => {\n    if (!videoUrl) {\n      alert('Please upload a video first!');\n      return;\n    }\n\n    // Redirect to YouTube login\n    window.location.assign(`http://localhost:5050/api/login?videoUrl=${encodeURIComponent(videoUrl)}`);\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>Upload Video and Upload to YouTube</h2>\n\n      <div>\n        <label>Enter your prompt:</label>\n        <input\n          type=\"text\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          placeholder=\"Enter your prompt\"\n          style={{ padding: '8px', width: '300px', marginBottom: '10px' }}\n        />\n      </div>\n\n      <div style={{ marginTop: '20px' }}>\n        <input\n          type=\"file\"\n          accept=\"video/mp4\"\n          onChange={handleFileChange}\n          style={{ marginBottom: '10px' }}\n        />\n        <br />\n        <button onClick={handleUpload}>Upload MP4</button>\n      </div>\n\n      <div style={{ marginTop: '20px' }}>\n        <button onClick={handleUploadToYouTube} disabled={!videoUrl}>\n          Upload to YouTube\n        </button>\n      </div>\n\n      {videoUrl && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Uploaded Video URL:</h3>\n          <a href={videoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {videoUrl}\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}