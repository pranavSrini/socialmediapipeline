{"ast":null,"code":"const nonJsonTypes = [\"function\", \"symbol\", \"undefined\"];\nconst protectedProps = [\"constructor\", \"prototype\", \"__proto__\"];\nconst objectPrototype = Object.getPrototypeOf({});\n/**\n * Custom JSON serializer for Error objects.\n * Returns all built-in error properties, as well as extended properties.\n */\nexport function toJSON() {\n  // HACK: We have to cast the objects to `any` so we can use symbol indexers.\n  // see https://github.com/Microsoft/TypeScript/issues/1863\n  let pojo = {};\n  let error = this;\n  for (let key of getDeepKeys(error)) {\n    if (typeof key === \"string\") {\n      let value = error[key];\n      let type = typeof value;\n      if (!nonJsonTypes.includes(type)) {\n        pojo[key] = value;\n      }\n    }\n  }\n  return pojo;\n}\n/**\n * Returns own, inherited, enumerable, non-enumerable, string, and symbol keys of `obj`.\n * Does NOT return members of the base Object prototype, or the specified omitted keys.\n */\nexport function getDeepKeys(obj, omit = []) {\n  let keys = [];\n  // Crawl the prototype chain, finding all the string and symbol keys\n  while (obj && obj !== objectPrototype) {\n    keys = keys.concat(Object.getOwnPropertyNames(obj), Object.getOwnPropertySymbols(obj));\n    obj = Object.getPrototypeOf(obj);\n  }\n  // De-duplicate the list of keys\n  let uniqueKeys = new Set(keys);\n  // Remove any omitted keys\n  for (let key of omit.concat(protectedProps)) {\n    uniqueKeys.delete(key);\n  }\n  return uniqueKeys;\n}","map":{"version":3,"names":["nonJsonTypes","protectedProps","objectPrototype","Object","getPrototypeOf","toJSON","pojo","error","key","getDeepKeys","value","type","includes","obj","omit","keys","concat","getOwnPropertyNames","getOwnPropertySymbols","uniqueKeys","Set","delete"],"sources":["../src/to-json.ts"],"sourcesContent":[null],"mappings":"AAEA,MAAMA,YAAY,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,CAAC;AACxD,MAAMC,cAAc,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC;AAChE,MAAMC,eAAe,GAAGC,MAAM,CAACC,cAAc,CAAC,EAAE,CAAC;AAEjD;;;;AAIA,OAAM,SAAUC,MAAMA,CAAA;EACpB;EACA;EACA,IAAIC,IAAI,GAAQ,EAAE;EAClB,IAAIC,KAAK,GAAG,IAAW;EAEvB,KAAK,IAAIC,GAAG,IAAIC,WAAW,CAACF,KAAK,CAAC,EAAE;IAClC,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;MAC3B,IAAIE,KAAK,GAAGH,KAAK,CAACC,GAAG,CAAC;MACtB,IAAIG,IAAI,GAAG,OAAOD,KAAK;MAEvB,IAAI,CAACV,YAAY,CAACY,QAAQ,CAACD,IAAI,CAAC,EAAE;QAChCL,IAAI,CAACE,GAAG,CAAC,GAAGE,KAAK;;;;EAKvB,OAAOJ,IAAqB;AAC9B;AAGA;;;;AAIA,OAAM,SAAUG,WAAWA,CAACI,GAAW,EAAEC,IAAA,GAA+B,EAAE;EACxE,IAAIC,IAAI,GAA2B,EAAE;EAErC;EACA,OAAOF,GAAG,IAAIA,GAAG,KAAKX,eAAe,EAAE;IACrCa,IAAI,GAAGA,IAAI,CAACC,MAAM,CAChBb,MAAM,CAACc,mBAAmB,CAACJ,GAAG,CAAC,EAC/BV,MAAM,CAACe,qBAAqB,CAACL,GAAG,CAAC,CAClC;IACDA,GAAG,GAAGV,MAAM,CAACC,cAAc,CAACS,GAAG,CAAW;;EAG5C;EACA,IAAIM,UAAU,GAAG,IAAIC,GAAG,CAACL,IAAI,CAAC;EAE9B;EACA,KAAK,IAAIP,GAAG,IAAIM,IAAI,CAACE,MAAM,CAACf,cAAc,CAAC,EAAE;IAC3CkB,UAAU,CAACE,MAAM,CAACb,GAAG,CAAC;;EAGxB,OAAOW,UAAU;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}