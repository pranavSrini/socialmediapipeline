{"ast":null,"code":"var _jsxFileName = \"/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [textInput, setTextInput] = useState(\"\"); // Text input from user\n  const [videoUrl, setVideoUrl] = useState(null); // To store generated video URL\n  const [loading, setLoading] = useState(false); // Loading state for generating video\n  const [uploading, setUploading] = useState(false); // Loading state for uploading to YouTube\n\n  // Handle text input change\n  const handleTextChange = e => {\n    setTextInput(e.target.value);\n  };\n\n  // Handle Generate Video button click\n  const handleGenerateClick = async () => {\n    if (!textInput) {\n      alert(\"Please enter some text to generate a video!\");\n      return;\n    }\n    setLoading(true);\n    try {\n      // Send text input to backend to generate the video\n      const response = await axios.post(\"http://localhost:5050/generate-video\", {\n        prompt: textInput\n      });\n      //console.log(response)\n      // Store the video URL received from backend\n      setVideoUrl(response.data.videoUrl);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating video:\", err);\n      setLoading(false);\n      alert(\"An error occurred while generating the video.\");\n    }\n  };\n\n  // Handle Upload to YouTube button click\n  const handleUploadClick = async () => {\n    if (!videoUrl) {\n      alert(\"Please generate a video first!\");\n      return;\n    }\n    setUploading(true);\n    try {\n      await axios.post(\"http://localhost:3000/upload-youtube\", {\n        videoUrl\n      });\n      alert(\"Video uploaded to YouTube successfully!\");\n    } catch (error) {\n      console.error(\"YouTube upload failed:\", error);\n      alert(\"Failed to upload to YouTube.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Video Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textInput,\n      onChange: handleTextChange,\n      placeholder: \"Enter your video prompt here...\",\n      rows: \"4\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateClick,\n        disabled: loading,\n        children: loading ? \"Generating...\" : \"Generate Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadClick,\n        disabled: uploading || !videoUrl,\n        children: uploading ? \"Uploading...\" : \"Upload to YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), videoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Generated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your video is ready: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: videoUrl,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: videoUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Wdu6/baJUEZiY5H7fGfUuFbZxU0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","textInput","setTextInput","videoUrl","setVideoUrl","loading","setLoading","uploading","setUploading","handleTextChange","e","target","value","handleGenerateClick","alert","response","post","prompt","data","err","console","error","handleUploadClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","cols","onClick","disabled","href","rel","_c","$RefreshReg$"],"sources":["/Users/pranavsrinivasan/Documents/VSCode/aividgen/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function App() {\n  const [textInput, setTextInput] = useState(\"\"); // Text input from user\n  const [videoUrl, setVideoUrl] = useState(null); // To store generated video URL\n  const [loading, setLoading] = useState(false); // Loading state for generating video\n  const [uploading, setUploading] = useState(false); // Loading state for uploading to YouTube\n\n  // Handle text input change\n  const handleTextChange = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  // Handle Generate Video button click\n  const handleGenerateClick = async () => {\n    if (!textInput) {\n      alert(\"Please enter some text to generate a video!\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // Send text input to backend to generate the video\n      const response = await axios.post(\"http://localhost:5050/generate-video\", { prompt: textInput });\n    //console.log(response)\n      // Store the video URL received from backend\n      setVideoUrl(response.data.videoUrl);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating video:\", err);\n      setLoading(false);\n      alert(\"An error occurred while generating the video.\");\n    }\n  };\n\n  // Handle Upload to YouTube button click\n  const handleUploadClick = async () => {\n    if (!videoUrl) {\n      alert(\"Please generate a video first!\");\n      return;\n    }\n\n    setUploading(true);\n\n    try {\n        await axios.post(\"http://localhost:3000/upload-youtube\", { videoUrl });\n        alert(\"Video uploaded to YouTube successfully!\");\n    } catch (error) {\n        console.error(\"YouTube upload failed:\", error);\n        alert(\"Failed to upload to YouTube.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>AI Video Generator</h1>\n      \n      {/* Text input for user to enter prompt */}\n      <textarea\n        value={textInput}\n        onChange={handleTextChange}\n        placeholder=\"Enter your video prompt here...\"\n        rows=\"4\"\n        cols=\"50\"\n      />\n\n      \n\n      <div>\n        {/* Generate Video Button */}\n        <button onClick={handleGenerateClick} disabled={loading}>\n          {loading ? \"Generating...\" : \"Generate Video\"}\n        </button>\n        \n        {/* Upload to YouTube Button */}\n        <button onClick={handleUploadClick} disabled={uploading || !videoUrl}>\n          {uploading ? \"Uploading...\" : \"Upload to YouTube\"}\n        </button>\n      </div>\n\n      {/* Display the video link once generated */}\n      {videoUrl && (\n        <div>\n          <h2>Video Generated!</h2>\n          <p>Your video is ready: <a href={videoUrl} target=\"_blank\" rel=\"noreferrer\">{videoUrl}</a></p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}