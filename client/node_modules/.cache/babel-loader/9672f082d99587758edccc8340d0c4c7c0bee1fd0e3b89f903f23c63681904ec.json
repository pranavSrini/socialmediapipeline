{"ast":null,"code":"import { format } from \"./isomorphic.node\";\n/**\n * Normalizes Ono options, accounting for defaults and optional options.\n */\nexport function normalizeOptions(options) {\n  options = options || {};\n  return {\n    concatMessages: options.concatMessages === undefined ? true : Boolean(options.concatMessages),\n    format: options.format === undefined ? format : typeof options.format === \"function\" ? options.format : false\n  };\n}\n/**\n * Normalizes the Ono arguments, accounting for defaults, options, and optional arguments.\n */\nexport function normalizeArgs(args, options) {\n  let originalError;\n  let props;\n  let formatArgs;\n  let message = \"\";\n  // Determine which arguments were actually specified\n  if (typeof args[0] === \"string\") {\n    formatArgs = args;\n  } else if (typeof args[1] === \"string\") {\n    if (args[0] instanceof Error) {\n      originalError = args[0];\n    } else {\n      props = args[0];\n    }\n    formatArgs = args.slice(1);\n  } else {\n    originalError = args[0];\n    props = args[1];\n    formatArgs = args.slice(2);\n  }\n  // If there are any format arguments, then format the error message\n  if (formatArgs.length > 0) {\n    if (options.format) {\n      message = options.format.apply(undefined, formatArgs);\n    } else {\n      message = formatArgs.join(\" \");\n    }\n  }\n  if (options.concatMessages && originalError && originalError.message) {\n    // The inner-error's message will be added to the new message\n    message += (message ? \" \\n\" : \"\") + originalError.message;\n  }\n  return {\n    originalError,\n    props,\n    message\n  };\n}","map":{"version":3,"names":["format","normalizeOptions","options","concatMessages","undefined","Boolean","normalizeArgs","args","originalError","props","formatArgs","message","Error","slice","length","apply","join"],"sources":["../src/normalize.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAG1C;;;AAGA,OAAM,SAAUC,gBAAgBA,CAACC,OAAoB;EACnDA,OAAO,GAAGA,OAAO,IAAI,EAAE;EACvB,OAAO;IACLC,cAAc,EAAED,OAAO,CAACC,cAAc,KAAKC,SAAS,GAAG,IAAI,GAAGC,OAAO,CAACH,OAAO,CAACC,cAAc,CAAC;IAC7FH,MAAM,EAAEE,OAAO,CAACF,MAAM,KAAKI,SAAS,GAAGJ,MAAM,GACxC,OAAOE,OAAO,CAACF,MAAM,KAAK,UAAU,GAAGE,OAAO,CAACF,MAAM,GAAG;GAC9D;AACH;AAEA;;;AAGA,OAAM,SAAUM,aAAaA,CAAwCC,IAAe,EAAEL,OAAmB;EACvG,IAAIM,aAA4B;EAChC,IAAIC,KAAoB;EACxB,IAAIC,UAAqB;EACzB,IAAIC,OAAO,GAAG,EAAE;EAEhB;EACA,IAAI,OAAOJ,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IAC/BG,UAAU,GAAGH,IAAI;GAClB,MACI,IAAI,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IACpC,IAAIA,IAAI,CAAC,CAAC,CAAC,YAAYK,KAAK,EAAE;MAC5BJ,aAAa,GAAGD,IAAI,CAAC,CAAC,CAAM;KAC7B,MACI;MACHE,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAM;;IAEtBG,UAAU,GAAGH,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;GAC3B,MACI;IACHL,aAAa,GAAGD,IAAI,CAAC,CAAC,CAAM;IAC5BE,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAM;IACpBG,UAAU,GAAGH,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;;EAG5B;EACA,IAAIH,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;IACzB,IAAIZ,OAAO,CAACF,MAAM,EAAE;MAClBW,OAAO,GAAGT,OAAO,CAACF,MAAM,CAACe,KAAK,CAACX,SAAS,EAAEM,UAAU,CAAC;KACtD,MACI;MACHC,OAAO,GAAGD,UAAU,CAACM,IAAI,CAAC,GAAG,CAAC;;;EAIlC,IAAId,OAAO,CAACC,cAAc,IAAIK,aAAa,IAAIA,aAAa,CAACG,OAAO,EAAE;IACpE;IACAA,OAAO,IAAI,CAACA,OAAO,GAAG,KAAK,GAAG,EAAE,IAAIH,aAAa,CAACG,OAAO;;EAG3D,OAAO;IAAEH,aAAa;IAAEC,KAAK;IAAEE;EAAO,CAAE;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}