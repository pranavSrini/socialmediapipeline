"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.edgeTTS = void 0;
const fs_extra_1 = __importDefault(require("fs-extra"));
const edge_tts_node_1 = require("edge-tts-node");
const https_proxy_agent_1 = require("https-proxy-agent");
const sub_maker_1 = require("../sub-maker");
const log_1 = require("../utils/log");
const edgeTTS = async (text, voiceName, voiceFile, ttsProxy) => {
    text = text.trim();
    edge_tts_node_1.MsEdgeTTS.wordBoundaryEnabled = true;
    try {
        const agent = ttsProxy ? new https_proxy_agent_1.HttpsProxyAgent(ttsProxy) : undefined;
        const edgeTTS = new edge_tts_node_1.MsEdgeTTS({ agent, enableLogger: log_1.Logger.enabled });
        await edgeTTS.setMetadata(voiceName, edge_tts_node_1.MsEdgeTTS.OUTPUT_FORMAT.AUDIO_24KHZ_96KBITRATE_MONO_MP3);
        const subMaker = new sub_maker_1.SubMaker();
        await new Promise((resolve, reject) => {
            edgeTTS
                .toStream(text)
                .on('data', (chunk) => {
                const message = chunk.toString();
                const obj = JSON.parse(message);
                if (obj.type === 'audio') {
                    fs_extra_1.default.appendFileSync(voiceFile, Buffer.from(obj.data, 'base64'));
                }
                else if (obj.type === 'WordBoundary') {
                    subMaker.createSub([obj.offset, obj.duration], obj.text);
                }
            })
                .on('end', () => {
                resolve(voiceFile);
            })
                .on('error', () => {
                reject();
            });
        });
        if (!subMaker || !subMaker.subs) {
            log_1.Logger.log(`failed, subMaker is None or subMaker.subs is None`);
        }
        log_1.Logger.log(`voice output file: ${voiceFile}`);
        return subMaker;
    }
    catch (e) {
        log_1.Logger.error(`voice failed, error: ${e}`);
    }
    return null;
};
exports.edgeTTS = edgeTTS;
//# sourceMappingURL=edgetts.js.map